2021-03-17T20:15:27.617901+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:15:27.624304+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:27.631895+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '1XjHRolIXL2M1EEOUsGGR4' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:27.636159+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:15:27.650885+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Taylor Swift' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8389f45cac7a58e3ab67a3bdeb5b4a0f9d8f7919' LIMIT 1;
2021-03-17T20:15:27.653164+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:27.656730+00:00 app[web.1]: Executing (826ae1f0-18ca-470f-a496-d19b6a10c600): START TRANSACTION;
2021-03-17T20:15:27.658536+00:00 app[web.1]: Executing (826ae1f0-18ca-470f-a496-d19b6a10c600): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:15:27.660072+00:00 app[web.1]: Executing (826ae1f0-18ca-470f-a496-d19b6a10c600): COMMIT;
2021-03-17T20:15:27.661918+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:15:27.669564+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:27.674579+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0QZ5yyl6B6utIWkxeBDxQN' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:27.684531+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:15:27.690106+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Lord Huron' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8d4ed8d0c5caa942db27f2a6dd382a1e4d8fe620' LIMIT 1;
2021-03-17T20:15:27.697986+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:15:27.701466+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58172 AND "SongArtists"."artistId" IN (43896);
2021-03-17T20:15:27.703743+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58172,43896,'2021-03-17 20:15:27.702 +00:00','2021-03-17 20:15:27.702 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:27.706199+00:00 app[web.1]: Executing (e685c081-52dc-4f47-9274-b8d110f54b7a): START TRANSACTION;
2021-03-17T20:15:27.709970+00:00 app[web.1]: Executing (e685c081-52dc-4f47-9274-b8d110f54b7a): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43896;
2021-03-17T20:15:27.713051+00:00 app[web.1]: Executing (e685c081-52dc-4f47-9274-b8d110f54b7a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d36b5afc38ee44ed8c8ea5ce2da8b75b$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43896,true,'2021-03-17 20:15:27.711 +00:00','2021-03-17 20:15:27.711 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d36b5afc38ee44ed8c8ea5ce2da8b75b$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:27.734215+00:00 app[web.1]: Executing (e685c081-52dc-4f47-9274-b8d110f54b7a): COMMIT;
2021-03-17T20:15:27.747669+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:27.761994+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '4w47S36wQGBhGg073q3nt7' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:27.769038+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:15:27.772639+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'ROSAL√çA' AND "Artist"."imageURL" = 'https://i.scdn.co/image/69b90048c580637065306b998d47bbb82fafc959' LIMIT 1;
2021-03-17T20:15:27.775524+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:27.778228+00:00 app[web.1]: Executing (7b1b1b66-3c6a-4901-b195-b13337816fa3): START TRANSACTION;
2021-03-17T20:15:27.779875+00:00 app[web.1]: Executing (7b1b1b66-3c6a-4901-b195-b13337816fa3): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43882;
2021-03-17T20:15:27.782963+00:00 app[web.1]: Executing (7b1b1b66-3c6a-4901-b195-b13337816fa3): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_256e55f4777e457f892e40b1ed3b2337$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43882,true,'2021-03-17 20:15:27.780 +00:00','2021-03-17 20:15:27.780 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_256e55f4777e457f892e40b1ed3b2337$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:27.788565+00:00 app[web.1]: Executing (7b1b1b66-3c6a-4901-b195-b13337816fa3): COMMIT;
2021-03-17T20:15:27.794551+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Travis Scott' AND "Artist"."imageURL" = 'https://i.scdn.co/image/ef784cfa3f4f87d656d3dfa5eedf0a24610faba9' LIMIT 1;
2021-03-17T20:15:27.797061+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:27.803803+00:00 app[web.1]: Executing (3000c869-1a10-41ec-9154-0db11dbb0982): START TRANSACTION;
2021-03-17T20:15:27.805403+00:00 app[web.1]: Executing (3000c869-1a10-41ec-9154-0db11dbb0982): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43828;
2021-03-17T20:15:27.808181+00:00 app[web.1]: Executing (3000c869-1a10-41ec-9154-0db11dbb0982): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f6c2f55835634b3680ac29b70a0c2ad2$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43828,true,'2021-03-17 20:15:27.806 +00:00','2021-03-17 20:15:27.806 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f6c2f55835634b3680ac29b70a0c2ad2$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:27.810924+00:00 app[web.1]: Executing (3000c869-1a10-41ec-9154-0db11dbb0982): COMMIT;
2021-03-17T20:15:27.815664+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:27.820027+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '1rqqCSm0Qe4I9rUvWncaom' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:27.822884+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:15:27.823463+00:00 app[web.1]: Executing (dd424d7d-fb50-4709-a2b4-6fcbca212923): START TRANSACTION;
2021-03-17T20:15:27.825145+00:00 app[web.1]: Executing (dd424d7d-fb50-4709-a2b4-6fcbca212923): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57878;
2021-03-17T20:15:27.827812+00:00 app[web.1]: Executing (dd424d7d-fb50-4709-a2b4-6fcbca212923): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_806684cfcc934cf4a45664744db2368d$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57878,43,'2021-03-17 20:15:27.826 +00:00','2021-03-17 20:15:27.826 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_806684cfcc934cf4a45664744db2368d$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:27.830777+00:00 app[web.1]: Executing (dd424d7d-fb50-4709-a2b4-6fcbca212923): COMMIT;
2021-03-17T20:15:27.834575+00:00 app[web.1]: Executing (94f4bfca-3860-4b5c-84a9-4d6a4f07fc9f): START TRANSACTION;
2021-03-17T20:15:27.836132+00:00 app[web.1]: Executing (94f4bfca-3860-4b5c-84a9-4d6a4f07fc9f): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43811 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:15:27.838909+00:00 app[web.1]: Executing (94f4bfca-3860-4b5c-84a9-4d6a4f07fc9f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_afad250119a448468817d5b3acfef8a0$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43811,true,'2021-03-17 20:15:27.837 +00:00','2021-03-17 20:15:27.837 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_afad250119a448468817d5b3acfef8a0$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:27.841534+00:00 app[web.1]: Executing (94f4bfca-3860-4b5c-84a9-4d6a4f07fc9f): COMMIT;
2021-03-17T20:15:27.843997+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43811;
2021-03-17T20:15:27.855642+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6CWIKEpJJjxLmcGhD8DN3T' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:27.863745+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:15:27.867355+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Scott Helman' AND "Artist"."imageURL" = 'https://i.scdn.co/image/da2b5b49aebc45278386c602fcbd08d14939457c' LIMIT 1;
2021-03-17T20:15:27.870460+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:27.879274+00:00 app[web.1]: Executing (2167bf81-2d3a-492e-b719-f5de5e264e7f): START TRANSACTION;
2021-03-17T20:15:27.880827+00:00 app[web.1]: Executing (2167bf81-2d3a-492e-b719-f5de5e264e7f): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43883;
2021-03-17T20:15:27.883667+00:00 app[web.1]: Executing (2167bf81-2d3a-492e-b719-f5de5e264e7f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d0867dd9826e494fb0f45608a323effe$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43883,true,'2021-03-17 20:15:27.882 +00:00','2021-03-17 20:15:27.882 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d0867dd9826e494fb0f45608a323effe$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:27.889659+00:00 app[web.1]: Executing (2167bf81-2d3a-492e-b719-f5de5e264e7f): COMMIT;
2021-03-17T20:15:27.892704+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:27.922389+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0PurA4JVJ8YQgSVopY8fn6' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:27.927200+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:15:27.930850+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Taylor Swift' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8389f45cac7a58e3ab67a3bdeb5b4a0f9d8f7919' LIMIT 1;
2021-03-17T20:15:27.933217+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:27.936501+00:00 app[web.1]: Executing (ee338ce6-d0a7-4e1c-9a7b-ec4a09d832b3): START TRANSACTION;
2021-03-17T20:15:27.938643+00:00 app[web.1]: Executing (ee338ce6-d0a7-4e1c-9a7b-ec4a09d832b3): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:15:27.939944+00:00 app[web.1]: Executing (ee338ce6-d0a7-4e1c-9a7b-ec4a09d832b3): COMMIT;
2021-03-17T20:15:27.942497+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:15:27.945358+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:27.949444+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '3UoULw70kMsiVXxW0L3A33' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:27.953731+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:15:27.957610+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Ariana Grande' AND "Artist"."imageURL" = 'https://i.scdn.co/image/f8c793519d837ca2f920c561535fe62ef32e8e5b' LIMIT 1;
2021-03-17T20:15:27.970945+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:27.974021+00:00 app[web.1]: Executing (a319139e-c94f-4c8b-a878-78f083654dd6): START TRANSACTION;
2021-03-17T20:15:27.975735+00:00 app[web.1]: Executing (a319139e-c94f-4c8b-a878-78f083654dd6): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43395;
2021-03-17T20:15:27.978990+00:00 app[web.1]: Executing (a319139e-c94f-4c8b-a878-78f083654dd6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_bf62d4febe51471481886b5fbcc01855$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43395,true,'2021-03-17 20:15:27.977 +00:00','2021-03-17 20:15:27.977 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_bf62d4febe51471481886b5fbcc01855$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:27.981747+00:00 app[web.1]: Executing (a319139e-c94f-4c8b-a878-78f083654dd6): COMMIT;
2021-03-17T20:15:27.985445+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:27.997863+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0tgVpDi06FyKpA1z0VMD4v' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:28.003643+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:15:28.004325+00:00 app[web.1]: Executing (bc2f225e-61fc-4242-9c42-3273e840c85f): START TRANSACTION;
2021-03-17T20:15:28.022747+00:00 app[web.1]: Executing (bc2f225e-61fc-4242-9c42-3273e840c85f): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57857;
2021-03-17T20:15:28.025024+00:00 app[web.1]: Executing (bc2f225e-61fc-4242-9c42-3273e840c85f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_412b01ca3cb744d29494aba9a10315bf$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57857,47,'2021-03-17 20:15:28.023 +00:00','2021-03-17 20:15:28.023 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_412b01ca3cb744d29494aba9a10315bf$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:28.030108+00:00 app[web.1]: Executing (bc2f225e-61fc-4242-9c42-3273e840c85f): COMMIT;
2021-03-17T20:15:28.032684+00:00 app[web.1]: Executing (c7307ddb-8480-4e99-9dd9-aef327664bc8): START TRANSACTION;
2021-03-17T20:15:28.034284+00:00 app[web.1]: Executing (c7307ddb-8480-4e99-9dd9-aef327664bc8): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43371 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:15:28.039498+00:00 app[web.1]: Executing (c7307ddb-8480-4e99-9dd9-aef327664bc8): COMMIT;
2021-03-17T20:15:28.040924+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43371;
2021-03-17T20:15:28.043590+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '3AJwUDP919kvQ9QcozQPxg' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:28.053454+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:15:28.059577+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Coldplay' AND "Artist"."imageURL" = 'https://i.scdn.co/image/4ffd6710617d289699cc0df60cf975e316025119' LIMIT 1;
2021-03-17T20:15:28.061512+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:28.064337+00:00 app[web.1]: Executing (9a338cca-fdd8-4e9f-a2a8-2f62680db63d): START TRANSACTION;
2021-03-17T20:15:28.065823+00:00 app[web.1]: Executing (9a338cca-fdd8-4e9f-a2a8-2f62680db63d): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43780;
2021-03-17T20:15:28.075564+00:00 app[web.1]: Executing (9a338cca-fdd8-4e9f-a2a8-2f62680db63d): COMMIT;
2021-03-17T20:15:28.083910+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43780;
2021-03-17T20:15:28.092785+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:28.096894+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6FE2iI43OZnszFLuLtvvmg' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:28.109213+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:15:28.116499+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'MKTO' AND "Artist"."imageURL" = 'https://i.scdn.co/image/23ce63b04f7edb4d337e3213336aed9f3a1d0b4c' LIMIT 1;
2021-03-17T20:15:28.125361+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:15:28.131812+00:00 app[web.1]: Executing (398d9ac6-6615-4cd6-907e-290a56f4669d): START TRANSACTION;
2021-03-17T20:15:28.133427+00:00 app[web.1]: Executing (398d9ac6-6615-4cd6-907e-290a56f4669d): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43387;
2021-03-17T20:15:28.140239+00:00 app[web.1]: Executing (398d9ac6-6615-4cd6-907e-290a56f4669d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_155e57efb5cb4247914a0c83bbd38f6f$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43387,true,'2021-03-17 20:15:28.138 +00:00','2021-03-17 20:15:28.138 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_155e57efb5cb4247914a0c83bbd38f6f$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:28.143451+00:00 app[web.1]: Executing (398d9ac6-6615-4cd6-907e-290a56f4669d): COMMIT;
2021-03-17T20:15:28.151425+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:15:28.158429+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '1GeNWyZtCHbcp3ZWp8GTOO' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:15:28.160442+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:15:28.161014+00:00 app[web.1]: Executing (23e19ee3-93e6-4dea-9b3f-2b3d9e375de8): START TRANSACTION;
2021-03-17T20:15:28.166584+00:00 app[web.1]: Executing (23e19ee3-93e6-4dea-9b3f-2b3d9e375de8): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57650;
2021-03-17T20:15:28.170002+00:00 app[web.1]: Executing (23e19ee3-93e6-4dea-9b3f-2b3d9e375de8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_06348a703bf24b4e883d60a89096b809$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57650,50,'2021-03-17 20:15:28.167 +00:00','2021-03-17 20:15:28.167 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_06348a703bf24b4e883d60a89096b809$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:28.173643+00:00 app[web.1]: Executing (23e19ee3-93e6-4dea-9b3f-2b3d9e375de8): COMMIT;
2021-03-17T20:15:28.177013+00:00 app[web.1]: Executing (f6a9bfdf-5fd1-4097-bab4-a979cc820400): START TRANSACTION;
2021-03-17T20:15:28.183991+00:00 app[web.1]: Executing (f6a9bfdf-5fd1-4097-bab4-a979cc820400): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43629 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:15:28.187103+00:00 app[web.1]: Executing (f6a9bfdf-5fd1-4097-bab4-a979cc820400): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4d4513b9d5ad460b93b08b0a05a1183c$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43629,true,'2021-03-17 20:15:28.185 +00:00','2021-03-17 20:15:28.185 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4d4513b9d5ad460b93b08b0a05a1183c$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:15:28.192926+00:00 app[web.1]: Executing (f6a9bfdf-5fd1-4097-bab4-a979cc820400): COMMIT;
2021-03-17T20:15:28.196672+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43629;
2021-03-17T20:15:28.208020+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."valence', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."valence" DESC;
2021-03-17T20:15:28.253595+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."valence', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."valence" ASC;
2021-03-17T20:15:28.293182+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."valence") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:15:28.298055+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."danceability', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."danceability" DESC;
2021-03-17T20:15:28.337640+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."danceability', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."danceability" ASC;
2021-03-17T20:15:28.459443+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."danceability") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:15:28.472057+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."instrumentalness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."instrumentalness" DESC;
2021-03-17T20:15:28.553654+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."instrumentalness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."instrumentalness" ASC;
2021-03-17T20:15:28.649666+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."instrumentalness") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:15:28.666258+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."energy', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."energy" DESC;
2021-03-17T20:15:28.723700+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."energy', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."energy" ASC;
2021-03-17T20:15:28.766786+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."energy") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:15:28.775137+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."speechiness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."speechiness" DESC;
2021-03-17T20:15:28.830205+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."speechiness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."speechiness" ASC;
2021-03-17T20:15:28.907237+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."speechiness") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:15:28.926658+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."tempo', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."tempo" DESC;
2021-03-17T20:15:28.977861+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."tempo', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."tempo" ASC;
2021-03-17T20:15:29.006137+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."tempo") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:15:29.013842+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."acousticness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."acousticness" DESC;
2021-03-17T20:15:29.055491+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."acousticness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."acousticness" ASC;
2021-03-17T20:15:29.104614+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."acousticness") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:15:29.115066+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."rank', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs->UserSongs"."rank" ASC;
2021-03-17T20:15:29.191388+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."popularity', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."popularity" DESC;
2021-03-17T20:15:29.229122+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."popularity") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:15:29.246737+00:00 app[web.1]: Executing (default): SELECT "Songs"."mode", Count("Songs"."mode") AS "count" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "Songs"."mode";
2021-03-17T20:15:29.252225+00:00 app[web.1]: Executing (default): SELECT "Songs"."key", Count("Songs"."key") AS "count" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "Songs"."key";
2021-03-17T20:15:29.263734+00:00 app[web.1]: Executing (default): select
2021-03-17T20:15:29.263735+00:00 app[web.1]: genre,
2021-03-17T20:15:29.263736+00:00 app[web.1]: count(x.genre)
2021-03-17T20:15:29.263736+00:00 app[web.1]: From
2021-03-17T20:15:29.263736+00:00 app[web.1]: (
2021-03-17T20:15:29.263737+00:00 app[web.1]: SELECT
2021-03-17T20:15:29.263738+00:00 app[web.1]: unnest(genres) as genre
2021-03-17T20:15:29.263738+00:00 app[web.1]: from
2021-03-17T20:15:29.263739+00:00 app[web.1]: "Artists"
2021-03-17T20:15:29.263739+00:00 app[web.1]: inner join
2021-03-17T20:15:29.263739+00:00 app[web.1]: "UserArtists"
2021-03-17T20:15:29.263741+00:00 app[web.1]: on "UserArtists"."artistId" = "Artists"."id"
2021-03-17T20:15:29.263741+00:00 app[web.1]: where
2021-03-17T20:15:29.263741+00:00 app[web.1]: "sessionId" ='glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND
2021-03-17T20:15:29.263742+00:00 app[web.1]: "UserArtists"."temp" =true
2021-03-17T20:15:29.263743+00:00 app[web.1]: )
2021-03-17T20:15:29.263743+00:00 app[web.1]: as x
2021-03-17T20:15:29.263743+00:00 app[web.1]: group by
2021-03-17T20:15:29.263744+00:00 app[web.1]: x.genre
2021-03-17T20:15:29.263744+00:00 app[web.1]: order by
2021-03-17T20:15:29.263744+00:00 app[web.1]: count desc limit 10
2021-03-17T20:15:29.321808+00:00 app[web.1]: Executing (default): SELECT "UserArtists"."artistId", "UserArtists"."temp", "UserArtists"."createdAt", "UserArtists"."updatedAt", "UserArtists"."sessionId", "Artist"."id" AS "Artist.id", "Artist"."name" AS "Artist.name", "Artist"."imageURL" AS "Artist.imageURL", "Artist"."genres" AS "Artist.genres", "Artist->Songs"."id" AS "Artist.Songs.id", "Artist->Songs"."name" AS "Artist.Songs.name", "Artist->Songs->SongArtists"."songId" AS "Artist.Songs.SongArtists.songId", "Artist->Songs->SongArtists"."artistId" AS "Artist.Songs.SongArtists.artistId", "Artist->Songs->SongArtists"."createdAt" AS "Artist.Songs.SongArtists.createdAt", "Artist->Songs->SongArtists"."updatedAt" AS "Artist.Songs.SongArtists.updatedAt", "Artist->Songs->tempUsers"."id" AS "Artist.Songs.tempUsers.id", "Artist->Songs->tempUsers"."sessionId" AS "Artist.Songs.tempUsers.sessionId", "Artist->Songs->tempUsers"."createdAt" AS "Artist.Songs.tempUsers.createdAt", "Artist->Songs->tempUsers"."updatedAt" AS "Artist.Songs.tempUsers.updatedAt" FROM "UserArtists" AS "UserArtists" LEFT OUTER JOIN "Artists" AS "Artist" ON "UserArtists"."artistId" = "Artist"."id" LEFT OUTER JOIN ( ( "SongArtists" AS "Artist->Songs->SongArtists" INNER JOIN "Songs" AS "Artist->Songs" ON "Artist->Songs"."id" = "Artist->Songs->SongArtists"."songId") INNER JOIN ( "UserSongs" AS "Artist->Songs->tempUsers->UserSongs" INNER JOIN "tempUsers" AS "Artist->Songs->tempUsers" ON "Artist->Songs->tempUsers"."sessionId" = "Artist->Songs->tempUsers->UserSongs"."sessionId") ON "Artist->Songs"."id" = "Artist->Songs->tempUsers->UserSongs"."songId" AND "Artist->Songs->tempUsers"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ) ON "Artist"."id" = "Artist->Songs->SongArtists"."artistId" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."temp" = true;
2021-03-17T20:15:29.386463+00:00 app[web.1]: Executing (default): SELECT "Songs"."yearOfRelease", Count("Songs"."yearOfRelease") AS "count" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "Songs"."yearOfRelease";
2021-03-17T20:15:29.582055+00:00 app[web.1]: Executing (default): SELECT "Songs"."name", "Songs"."id", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserSongs"."songId" AS "tempUsers.UserSongs.songId", "tempUsers->UserSongs"."rank" AS "tempUsers.UserSongs.rank", "tempUsers->UserSongs"."createdAt" AS "tempUsers.UserSongs.createdAt", "tempUsers->UserSongs"."updatedAt" AS "tempUsers.UserSongs.updatedAt", "tempUsers->UserSongs"."sessionId" AS "tempUsers.UserSongs.sessionId", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "UserSongs" AS "tempUsers->UserSongs" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserSongs"."sessionId") ON "Songs"."id" = "tempUsers->UserSongs"."songId" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."temp" = true;
2021-03-17T20:15:29.585191+00:00 heroku[router]: at=info method=GET path="/userData?timeLength=6Months&code=AQCwQMGAOjKzLvpY19nUgWGSvH9BVgWg5UYGuTg0cnkwsueRN2jigLNEWm4CO9iM0llbGwrehjMvp7YvoK6NgkNpiEEO-GUkLaBOM0AbI0hvYDLv1XKJaMk0-wHEEjN0Jc44HCFLBf_vj3S4k5rR4Z4H-XibTfeqYJ5QBIgvo8yhrnQZIB9TxqVNTGV6lzj8di3szcDpKCHLm5XVCsVCdINpnOYcHOxuiur3XmYTQCDUIWk-ByZlLu6S6PgUoQ" host=musicthroughdecades.herokuapp.com request_id=24649fd7-fd21-4afc-863d-5591dd11544f fwd="174.89.36.96" dyno=web.1 connect=0ms service=10037ms status=200 bytes=27465 protocol=https
2021-03-17T20:15:29.632936+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43364;
2021-03-17T20:15:29.647102+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58135
2021-03-17T20:15:29.655945+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1960' LIMIT 1;
2021-03-17T20:15:29.667758+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:15:29.693114+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."spotifyId", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE ("Songs"."valence" BETWEEN '0.17481399543583395' AND '0.6148139954358339' AND "Songs"."energy" BETWEEN '0.332200001180172' AND '0.772200001180172' AND "Songs"."danceability" BETWEEN '0.34211999893188483' AND '0.7821199989318848' AND "Songs"."tempo" BETWEEN '76.53010040283203' AND '144.53010040283203') AND "Songs"."decadeId" = 2;
2021-03-17T20:15:29.701654+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58136
2021-03-17T20:15:29.717804+00:00 heroku[router]: at=info method=GET path="/userReccomendations?decade=1960&averageValues={%22valence%22:0.39481399543583395,%22danceability%22:0.5621199989318848,%22instrumentalness%22:0.010918842473570294,%22energy%22:0.552200001180172,%22speechiness%22:0.07248400017619133,%22tempo%22:110.53010040283203,%22acousticness%22:0.400455400464125}" host=musicthroughdecades.herokuapp.com request_id=0c79f56a-ed66-445f-a03f-ed7e3e5eb3d4 fwd="174.89.36.96" dyno=web.1 connect=1ms service=86ms status=200 bytes=3007 protocol=https
2021-03-17T20:15:29.726038+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43389;
2021-03-17T20:15:29.740993+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43390;
2021-03-17T20:15:29.751397+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58137
2021-03-17T20:15:29.770789+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43872;
2021-03-17T20:15:29.778389+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58138
2021-03-17T20:15:29.794499+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43321;
2021-03-17T20:15:29.811561+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58139
2021-03-17T20:15:29.822878+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43592;
2021-03-17T20:15:29.833614+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58140
2021-03-17T20:15:29.843282+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43364;
2021-03-17T20:15:29.851100+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58141
2021-03-17T20:15:29.857028+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:29.869869+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58142
2021-03-17T20:15:29.878255+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43409;
2021-03-17T20:15:29.893143+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58143
2021-03-17T20:15:29.902105+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43373;
2021-03-17T20:15:29.909145+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58144
2021-03-17T20:15:29.917497+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43804;
2021-03-17T20:15:29.955990+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43780;
2021-03-17T20:15:29.961711+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58145
2021-03-17T20:15:29.966963+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43321;
2021-03-17T20:15:29.979869+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58146
2021-03-17T20:15:29.992745+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43873;
2021-03-17T20:15:29.997199+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58147
2021-03-17T20:15:30.009911+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43502;
2021-03-17T20:15:30.014153+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58148
2021-03-17T20:15:30.019420+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:30.047697+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58149
2021-03-17T20:15:30.057099+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:15:30.098043+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58150
2021-03-17T20:15:30.136987+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43893;
2021-03-17T20:15:30.144504+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43367;
2021-03-17T20:15:30.154334+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58151
2021-03-17T20:15:30.168038+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43379;
2021-03-17T20:15:30.195946+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43380;
2021-03-17T20:15:30.209771+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58152
2021-03-17T20:15:30.219488+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43874;
2021-03-17T20:15:30.228295+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43379;
2021-03-17T20:15:30.232675+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58153
2021-03-17T20:15:30.237236+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43380;
2021-03-17T20:15:30.247812+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58154
2021-03-17T20:15:30.259804+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43365;
2021-03-17T20:15:30.266068+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43894;
2021-03-17T20:15:30.271283+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58155
2021-03-17T20:15:30.277123+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43881;
2021-03-17T20:15:30.281569+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58156
2021-03-17T20:15:30.286011+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43367;
2021-03-17T20:15:30.292218+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43893;
2021-03-17T20:15:30.314967+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58157
2021-03-17T20:15:30.322866+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:30.331043+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58158
2021-03-17T20:15:30.335023+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43380;
2021-03-17T20:15:30.341300+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58159
2021-03-17T20:15:30.347265+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43876;
2021-03-17T20:15:30.355696+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58160
2021-03-17T20:15:30.367246+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43370;
2021-03-17T20:15:30.371217+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58161
2021-03-17T20:15:30.383775+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43866;
2021-03-17T20:15:30.389481+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58162
2021-03-17T20:15:30.405925+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:30.425395+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43879;
2021-03-17T20:15:30.442071+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58163
2021-03-17T20:15:30.457341+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43371;
2021-03-17T20:15:30.470681+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58164
2021-03-17T20:15:30.479392+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43385;
2021-03-17T20:15:30.484088+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58165
2021-03-17T20:15:30.489205+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:30.504436+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58166
2021-03-17T20:15:30.515956+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:30.527388+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43877;
2021-03-17T20:15:30.531290+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58167
2021-03-17T20:15:30.537092+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43895;
2021-03-17T20:15:30.547675+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58168
2021-03-17T20:15:30.555753+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:15:30.561779+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58169
2021-03-17T20:15:30.570930+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:30.575323+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58170
2021-03-17T20:15:30.587891+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:30.593511+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58171
2021-03-17T20:15:30.599161+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43896;
2021-03-17T20:15:30.603806+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58172
2021-03-17T20:15:30.609536+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43882;
2021-03-17T20:15:30.617317+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43828;
2021-03-17T20:15:30.627396+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58173
2021-03-17T20:15:30.655786+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43883;
2021-03-17T20:15:30.659596+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58174
2021-03-17T20:15:30.668040+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:15:30.670265+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58175
2021-03-17T20:15:30.674646+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43395;
2021-03-17T20:15:30.677905+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58176
2021-03-17T20:15:30.691236+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43780;
2021-03-17T20:15:30.701018+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58177
2021-03-17T20:15:30.716142+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43387;
2021-03-17T20:15:30.720203+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58178
2021-03-17T20:15:30.727971+00:00 app[web.1]: Executing (default): DELETE FROM "tempUsers" WHERE "sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo'
2021-03-17T20:43:00.680816+00:00 heroku[router]: at=info method=GET path="/" host=musicthroughdecades.herokuapp.com request_id=26d5eab4-2896-4a20-9fbf-f1a82f532ce1 fwd="174.89.36.96" dyno=web.1 connect=1ms service=9ms status=304 bytes=237 protocol=https
2021-03-17T20:43:00.739137+00:00 heroku[router]: at=info method=GET path="/static/css/main.be8902c4.chunk.css" host=musicthroughdecades.herokuapp.com request_id=a723e520-29e8-481d-b66d-04a755da21ff fwd="174.89.36.96" dyno=web.1 connect=1ms service=7ms status=304 bytes=238 protocol=https
2021-03-17T20:43:00.892663+00:00 heroku[router]: at=info method=GET path="/static/js/2.5d3ceb0f.chunk.js" host=musicthroughdecades.herokuapp.com request_id=a159e5ed-edc7-48e2-8845-abea7c7c3770 fwd="174.89.36.96" dyno=web.1 connect=1ms service=45ms status=200 bytes=628212 protocol=https
2021-03-17T20:43:01.073332+00:00 heroku[router]: at=info method=GET path="/static/css/2.d470c34f.chunk.css" host=musicthroughdecades.herokuapp.com request_id=6207cc2f-846c-4503-80cc-7e0f048ee2bb fwd="174.89.36.96" dyno=web.1 connect=1ms service=7ms status=304 bytes=239 protocol=https
2021-03-17T20:43:01.086783+00:00 heroku[router]: at=info method=GET path="/static/js/main.9e08271a.chunk.js" host=musicthroughdecades.herokuapp.com request_id=feecd66a-8a40-4718-8353-92d00a570c2a fwd="174.89.36.96" dyno=web.1 connect=1ms service=13ms status=304 bytes=239 protocol=https
2021-03-17T20:43:02.154951+00:00 heroku[router]: at=info method=GET path="/manifest.json" host=musicthroughdecades.herokuapp.com request_id=e65f2027-c095-4095-be4d-3c06d40fbd2d fwd="174.89.36.96" dyno=web.1 connect=1ms service=7ms status=304 bytes=363 protocol=https
2021-03-17T20:43:02.310280+00:00 heroku[router]: at=info method=GET path="/logo192.png" host=musicthroughdecades.herokuapp.com request_id=fe4895aa-8b77-42e7-974d-f598442b8d34 fwd="174.89.36.96" dyno=web.1 connect=2ms service=3ms status=304 bytes=238 protocol=https
2021-03-17T20:43:06.074090+00:00 heroku[router]: at=info method=GET path="/authorize" host=musicthroughdecades.herokuapp.com request_id=a8874514-00af-422a-91a6-d4f010837df7 fwd="174.89.36.96" dyno=web.1 connect=2ms service=5ms status=304 bytes=182 protocol=https
2021-03-17T20:43:06.816397+00:00 heroku[router]: at=info method=GET path="/callback?code=AQAYrvA4SpLWBax4d3DR8IWADa3LwNfA9hYCjbC11w-JYulDqT6ZYG1ndsri3RhNxlHbSSAQtC4WjrxSONP8YmfRDW-_BKsAOAiG2UJuwR84AJdFzfdCsdHSWovSVr7GYE2xtUo2H5_HQUlpwCsWXsO4EboMUVuNHXKscgk83TVlSpTV64M2zvZZYTv2d3Zrm2b1vtWZfwk1Jes_ROQDD3CEnA-epFHMZiUmg-0-DV_X5d_xzcQQ3j4zroJ-rA&state=musicthroughdecades" host=musicthroughdecades.herokuapp.com request_id=1e0eb03b-27cc-43b6-a359-11749b7020f9 fwd="174.89.36.96" dyno=web.1 connect=2ms service=58ms status=302 bytes=1226 protocol=https
2021-03-17T20:43:06.860699+00:00 heroku[router]: at=info method=GET path="/?authorized=true&code=AQAYrvA4SpLWBax4d3DR8IWADa3LwNfA9hYCjbC11w-JYulDqT6ZYG1ndsri3RhNxlHbSSAQtC4WjrxSONP8YmfRDW-_BKsAOAiG2UJuwR84AJdFzfdCsdHSWovSVr7GYE2xtUo2H5_HQUlpwCsWXsO4EboMUVuNHXKscgk83TVlSpTV64M2zvZZYTv2d3Zrm2b1vtWZfwk1Jes_ROQDD3CEnA-epFHMZiUmg-0-DV_X5d_xzcQQ3j4zroJ-rA" host=musicthroughdecades.herokuapp.com request_id=eae30e00-5edf-4ae6-8582-0f02c2f41479 fwd="174.89.36.96" dyno=web.1 connect=1ms service=4ms status=200 bytes=2583 protocol=https
2021-03-17T20:43:07.077702+00:00 heroku[router]: at=info method=GET path="/static/js/main.9e08271a.chunk.js" host=musicthroughdecades.herokuapp.com request_id=ef6ba5b7-ddae-4439-9150-caa309aa1532 fwd="174.89.36.96" dyno=web.1 connect=0ms service=10ms status=304 bytes=239 protocol=https
2021-03-17T20:43:07.078911+00:00 heroku[router]: at=info method=GET path="/static/js/2.5d3ceb0f.chunk.js" host=musicthroughdecades.herokuapp.com request_id=7a057072-305f-44d5-bbe2-9a73a2a7ce1f fwd="174.89.36.96" dyno=web.1 connect=2ms service=8ms status=304 bytes=239 protocol=https
2021-03-17T20:43:07.089446+00:00 heroku[router]: at=info method=GET path="/static/css/main.be8902c4.chunk.css" host=musicthroughdecades.herokuapp.com request_id=13a1ef45-51dc-49ed-82c3-cb45de893db7 fwd="174.89.36.96" dyno=web.1 connect=2ms service=15ms status=304 bytes=238 protocol=https
2021-03-17T20:43:07.190776+00:00 heroku[router]: at=info method=GET path="/static/css/2.d470c34f.chunk.css" host=musicthroughdecades.herokuapp.com request_id=b6e453b8-72b5-41ec-9529-c7acdd258df0 fwd="174.89.36.96" dyno=web.1 connect=1ms service=9ms status=304 bytes=239 protocol=https
2021-03-17T20:43:07.574260+00:00 heroku[router]: at=info method=GET path="/authTokens?code=AQAYrvA4SpLWBax4d3DR8IWADa3LwNfA9hYCjbC11w-JYulDqT6ZYG1ndsri3RhNxlHbSSAQtC4WjrxSONP8YmfRDW-_BKsAOAiG2UJuwR84AJdFzfdCsdHSWovSVr7GYE2xtUo2H5_HQUlpwCsWXsO4EboMUVuNHXKscgk83TVlSpTV64M2zvZZYTv2d3Zrm2b1vtWZfwk1Jes_ROQDD3CEnA-epFHMZiUmg-0-DV_X5d_xzcQQ3j4zroJ-rA" host=musicthroughdecades.herokuapp.com request_id=dba69304-3a92-4e23-a85a-e7bedc886d4f fwd="174.89.36.96" dyno=web.1 connect=4ms service=146ms status=200 bytes=603 protocol=https
2021-03-17T20:43:07.610933+00:00 heroku[router]: at=info method=GET path="/manifest.json" host=musicthroughdecades.herokuapp.com request_id=a0fbb86c-28a2-4f30-90f8-4460c365822d fwd="174.89.36.96" dyno=web.1 connect=3ms service=9ms status=304 bytes=363 protocol=https
2021-03-17T20:43:07.869884+00:00 heroku[router]: at=info method=GET path="/logo192.png" host=musicthroughdecades.herokuapp.com request_id=d72b8158-6840-4c51-845d-9d6783a7141b fwd="174.89.36.96" dyno=web.1 connect=1ms service=46ms status=304 bytes=238 protocol=https
2021-03-17T20:43:07.902467+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1) AS "Decade" LEFT OUTER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId";
2021-03-17T20:43:07.939760+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:07.953488+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:07.965420+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:07.971658+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:07.974039+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:07.976921+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:07.979181+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:07.980979+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:07.988067+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:07.990244+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:07.995915+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:07.997796+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:08.003108+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.005167+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:08.007549+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.013947+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:08.023388+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.025865+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:08.029434+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.032072+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:08.034506+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.039662+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:08.055494+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.057440+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:08.064082+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.066686+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:08.069694+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.080273+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:08.083695+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.086223+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:08.090023+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.093296+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:08.095235+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.099732+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:08.101519+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.103410+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:08.112788+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.115393+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:08.122123+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.124722+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:08.133337+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.156581+00:00 app[web.1]: Executing (default): SELECT "name", "valence", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."valence" ASC LIMIT 3;
2021-03-17T20:43:08.170131+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57630;
2021-03-17T20:43:08.185954+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57624;
2021-03-17T20:43:08.194529+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57599;
2021-03-17T20:43:08.200902+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.205196+00:00 app[web.1]: Executing (default): SELECT "name", "valence", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."valence" DESC LIMIT 3;
2021-03-17T20:43:08.209737+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57596;
2021-03-17T20:43:08.215452+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57629;
2021-03-17T20:43:08.225041+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57641;
2021-03-17T20:43:08.248797+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.268488+00:00 app[web.1]: Executing (default): SELECT AVG("valence") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989 LIMIT 1;
2021-03-17T20:43:08.284121+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.304550+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:08.315269+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.414825+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:08.432768+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.440222+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:08.445404+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.451236+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:08.455899+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.462088+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:08.466164+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.476129+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:08.478272+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.485333+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:08.503291+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.509306+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:08.517000+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.522804+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:08.532727+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.539090+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:08.547927+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.556952+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:08.560330+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.570800+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:08.576644+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.584277+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:08.587664+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.596751+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:08.598523+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.604052+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:08.611092+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.643034+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:08.644419+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.652480+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:08.669339+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.677530+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:08.689401+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.691598+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:08.704239+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.717854+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:08.740778+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.755814+00:00 app[web.1]: Executing (default): SELECT "name", "danceability", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."danceability" ASC LIMIT 3;
2021-03-17T20:43:08.787897+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57616;
2021-03-17T20:43:08.794261+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57606;
2021-03-17T20:43:08.833221+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57621;
2021-03-17T20:43:08.846028+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.859607+00:00 app[web.1]: Executing (default): SELECT "name", "danceability", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."danceability" DESC LIMIT 3;
2021-03-17T20:43:08.873541+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57598;
2021-03-17T20:43:08.892192+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57559;
2021-03-17T20:43:08.897952+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57588;
2021-03-17T20:43:08.909258+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.916572+00:00 app[web.1]: Executing (default): SELECT AVG("danceability") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989 LIMIT 1;
2021-03-17T20:43:08.918881+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.921800+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:08.924518+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.927181+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:08.929963+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.932121+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:08.934784+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.936193+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:08.938212+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.943260+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:08.948040+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.956120+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:08.957971+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.959802+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:08.961483+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.968167+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:08.969797+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.971798+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:08.973480+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.976706+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:08.982585+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.984262+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:08.985846+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.987605+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:08.989439+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.991650+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:08.993312+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:08.999485+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.001319+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.003109+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.004846+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.006603+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.014508+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.016138+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.017832+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.019749+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.026753+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.028665+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.030314+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.032055+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.034790+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.037380+00:00 app[web.1]: Executing (default): SELECT "name", "instrumentalness", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."instrumentalness" ASC LIMIT 3;
2021-03-17T20:43:09.040871+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57561;
2021-03-17T20:43:09.045367+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57557;
2021-03-17T20:43:09.055129+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57562;
2021-03-17T20:43:09.061412+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.069639+00:00 app[web.1]: Executing (default): SELECT "name", "instrumentalness", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."instrumentalness" DESC LIMIT 3;
2021-03-17T20:43:09.073085+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57588;
2021-03-17T20:43:09.076942+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57599;
2021-03-17T20:43:09.081520+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57598;
2021-03-17T20:43:09.084390+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.086205+00:00 app[web.1]: Executing (default): SELECT AVG("instrumentalness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989 LIMIT 1;
2021-03-17T20:43:09.088575+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.097342+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:09.103409+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.112112+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:09.113879+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.120108+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:09.127079+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.129056+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:09.135870+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.137623+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:09.143920+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.145784+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:09.151919+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.153738+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:09.159870+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.161605+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:09.167923+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.176253+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:09.184059+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.187255+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:09.190281+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.193437+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:09.196860+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.198759+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:09.200755+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.206205+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.208189+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.231081+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.232622+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.234570+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.239937+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.241930+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.246958+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.248918+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.250715+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.252583+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.259927+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.261754+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.267963+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.269778+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.273076+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.281059+00:00 app[web.1]: Executing (default): SELECT "name", "energy", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."energy" ASC LIMIT 3;
2021-03-17T20:43:09.285061+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57609;
2021-03-17T20:43:09.293937+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57621;
2021-03-17T20:43:09.308742+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57565;
2021-03-17T20:43:09.315152+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.317674+00:00 app[web.1]: Executing (default): SELECT "name", "energy", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."energy" DESC LIMIT 3;
2021-03-17T20:43:09.324013+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57570;
2021-03-17T20:43:09.332310+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57648;
2021-03-17T20:43:09.342781+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57604;
2021-03-17T20:43:09.351944+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.353733+00:00 app[web.1]: Executing (default): SELECT AVG("energy") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989 LIMIT 1;
2021-03-17T20:43:09.359690+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.361253+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:09.367908+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.369744+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:09.375917+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.377786+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:09.379376+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.381014+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:09.384526+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.386258+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:09.388161+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.389869+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:09.392562+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.396194+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:09.398004+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.404081+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:09.405697+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.407771+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:09.413219+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.417436+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:09.421938+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.423806+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:09.428083+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.430003+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:09.435868+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.439207+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.440882+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.448309+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.453504+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.455246+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.456913+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.458830+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.461016+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.463595+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.465890+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.468811+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.471875+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.475187+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.477309+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.480881+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.488637+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.491317+00:00 app[web.1]: Executing (default): SELECT "name", "speechiness", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."speechiness" ASC LIMIT 3;
2021-03-17T20:43:09.500876+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57617;
2021-03-17T20:43:09.504404+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57619;
2021-03-17T20:43:09.510093+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57560;
2021-03-17T20:43:09.513494+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.519282+00:00 app[web.1]: Executing (default): SELECT "name", "speechiness", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."speechiness" DESC LIMIT 3;
2021-03-17T20:43:09.528143+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57623;
2021-03-17T20:43:09.531822+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57609;
2021-03-17T20:43:09.545132+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57598;
2021-03-17T20:43:09.548420+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.550688+00:00 app[web.1]: Executing (default): SELECT AVG("speechiness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989 LIMIT 1;
2021-03-17T20:43:09.552936+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.554859+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:09.556742+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.558557+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:09.563901+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.565855+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:09.571980+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.575075+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:09.577060+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.579414+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:09.580972+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.587693+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:09.588831+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.590603+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:09.592443+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.594382+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:09.596231+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.598069+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:09.608980+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.611295+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:09.613447+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.615314+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:09.617011+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.619395+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:09.626394+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.628513+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.630315+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.632433+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.634471+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.637203+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.639234+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.640793+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.646753+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.648643+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.650255+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.652502+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.654233+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.655941+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.657559+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.663554+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.665814+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.668396+00:00 app[web.1]: Executing (default): SELECT "name", "tempo", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."tempo" ASC LIMIT 3;
2021-03-17T20:43:09.676099+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57630;
2021-03-17T20:43:09.684311+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57609;
2021-03-17T20:43:09.689042+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57652;
2021-03-17T20:43:09.692538+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.695057+00:00 app[web.1]: Executing (default): SELECT "name", "tempo", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."tempo" DESC LIMIT 3;
2021-03-17T20:43:09.698209+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57621;
2021-03-17T20:43:09.701970+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57616;
2021-03-17T20:43:09.705365+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57584;
2021-03-17T20:43:09.708516+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.714053+00:00 app[web.1]: Executing (default): SELECT AVG("tempo") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989 LIMIT 1;
2021-03-17T20:43:09.715832+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.717660+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:09.719612+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.721599+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1980 LIMIT 1;
2021-03-17T20:43:09.723428+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.725170+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:09.727091+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.729051+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1981 AND 1981 LIMIT 1;
2021-03-17T20:43:09.731169+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.764697+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:09.770238+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.776106+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1982 AND 1982 LIMIT 1;
2021-03-17T20:43:09.782779+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.787293+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:09.792163+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.795412+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1983 AND 1983 LIMIT 1;
2021-03-17T20:43:09.800806+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.807579+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:09.815966+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.858527+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1984 AND 1984 LIMIT 1;
2021-03-17T20:43:09.861396+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.868079+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:09.873029+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.882852+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1985 AND 1985 LIMIT 1;
2021-03-17T20:43:09.886841+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.888582+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.890569+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.895962+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1986 AND 1986 LIMIT 1;
2021-03-17T20:43:09.897680+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.899895+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.902412+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.903597+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1987 AND 1987 LIMIT 1;
2021-03-17T20:43:09.905175+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.912077+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.913904+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.915539+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1988 AND 1988 LIMIT 1;
2021-03-17T20:43:09.917080+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.918704+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.920394+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.922143+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1989 AND 1989 LIMIT 1;
2021-03-17T20:43:09.928835+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.931214+00:00 app[web.1]: Executing (default): SELECT "name", "acousticness", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."acousticness" ASC LIMIT 3;
2021-03-17T20:43:09.941903+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57599;
2021-03-17T20:43:09.949638+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57633;
2021-03-17T20:43:09.957531+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57575;
2021-03-17T20:43:09.965175+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.967768+00:00 app[web.1]: Executing (default): SELECT "name", "acousticness", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."acousticness" DESC LIMIT 3;
2021-03-17T20:43:09.972539+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57609;
2021-03-17T20:43:09.977499+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57616;
2021-03-17T20:43:09.987169+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57568;
2021-03-17T20:43:09.992517+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:09.999482+00:00 app[web.1]: Executing (default): SELECT AVG("acousticness") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989 LIMIT 1;
2021-03-17T20:43:10.004216+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:10.009002+00:00 app[web.1]: Executing (default): SELECT "name", "popularity", "yearOfRelease", "rank", "id", "imageURL", "previewURL", "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."decadeId" IN (4) AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989) ORDER BY "Songs"."popularity" DESC LIMIT 10;
2021-03-17T20:43:10.018910+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57558;
2021-03-17T20:43:10.030927+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57574;
2021-03-17T20:43:10.035315+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57632;
2021-03-17T20:43:10.045530+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57573;
2021-03-17T20:43:10.049291+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57559;
2021-03-17T20:43:10.055129+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57627;
2021-03-17T20:43:10.060132+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57599;
2021-03-17T20:43:10.064684+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57603;
2021-03-17T20:43:10.074191+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57615;
2021-03-17T20:43:10.077917+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."valence", "Songs"."danceability", "Songs"."energy", "Songs"."mode", "Songs"."key", "Songs"."speechiness", "Songs"."tempo", "Songs"."acousticness", "Songs"."popularity", "Songs"."instrumentalness", "Songs"."rank", "Songs"."decadeId", "Songs"."spotifyId", "Songs"."temp", "Songs"."previewURL", "Songs"."createdAt", "Songs"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."id" = 57578;
2021-03-17T20:43:10.080667+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:10.082934+00:00 app[web.1]: Executing (default): SELECT AVG("popularity") AS "average" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND "Songs"."yearOfRelease" BETWEEN 1980 AND 1989 LIMIT 1;
2021-03-17T20:43:10.084772+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:10.088268+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id", "Songs"."name", "Songs"."rank", "Songs"."imageURL", "Songs"."yearOfRelease", "Songs"."previewURL" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 ORDER BY "Songs"."rank" ASC LIMIT 20) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" ORDER BY "Songs"."rank" ASC;
2021-03-17T20:43:10.102962+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:10.105213+00:00 app[web.1]: Executing (default): SELECT
2021-03-17T20:43:10.105214+00:00 app[web.1]: "Decade"."id",
2021-03-17T20:43:10.105215+00:00 app[web.1]: "Artists"."name" AS "Artists.name",
2021-03-17T20:43:10.105215+00:00 app[web.1]: "Artists"."imageURL" AS "Artists.imageURL",
2021-03-17T20:43:10.105216+00:00 app[web.1]: "Artists"."genres" AS "Artists.genres",
2021-03-17T20:43:10.105216+00:00 app[web.1]: COUNT("Artists -> Songs"."id") AS "Artists.Songs.count"
2021-03-17T20:43:10.105217+00:00 app[web.1]: FROM
2021-03-17T20:43:10.105217+00:00 app[web.1]: "Decades" AS "Decade"
2021-03-17T20:43:10.105218+00:00 app[web.1]: LEFT OUTER JOIN
2021-03-17T20:43:10.105218+00:00 app[web.1]: (
2021-03-17T20:43:10.105219+00:00 app[web.1]: ( "DecadeArtists" AS "Artists -> DecadeArtists"
2021-03-17T20:43:10.105219+00:00 app[web.1]: INNER JOIN
2021-03-17T20:43:10.105219+00:00 app[web.1]: "Artists" AS "Artists"
2021-03-17T20:43:10.105220+00:00 app[web.1]: ON "Artists"."id" = "Artists -> DecadeArtists"."artistId")
2021-03-17T20:43:10.105220+00:00 app[web.1]: INNER JOIN
2021-03-17T20:43:10.105221+00:00 app[web.1]: (
2021-03-17T20:43:10.105221+00:00 app[web.1]: "SongArtists" AS "Artists -> Songs -> SongArtists"
2021-03-17T20:43:10.105221+00:00 app[web.1]: INNER JOIN
2021-03-17T20:43:10.105222+00:00 app[web.1]: "Songs" AS "Artists -> Songs"
2021-03-17T20:43:10.105222+00:00 app[web.1]: ON "Artists -> Songs"."id" = "Artists -> Songs -> SongArtists"."songId"
2021-03-17T20:43:10.105222+00:00 app[web.1]: )
2021-03-17T20:43:10.105223+00:00 app[web.1]: ON "Artists"."id" = "Artists -> Songs -> SongArtists"."artistId"
2021-03-17T20:43:10.105223+00:00 app[web.1]: AND "Artists -> Songs"."decadeId" = 4
2021-03-17T20:43:10.105224+00:00 app[web.1]: )
2021-03-17T20:43:10.105224+00:00 app[web.1]: ON "Decade"."id" = "Artists -> DecadeArtists"."decadeId"
2021-03-17T20:43:10.105224+00:00 app[web.1]: WHERE
2021-03-17T20:43:10.105225+00:00 app[web.1]: "Decade"."id" = 4
2021-03-17T20:43:10.105225+00:00 app[web.1]: GROUP BY
2021-03-17T20:43:10.105225+00:00 app[web.1]: "Decade"."id",
2021-03-17T20:43:10.105226+00:00 app[web.1]: "Artists"."id"
2021-03-17T20:43:10.105226+00:00 app[web.1]: ORDER BY
2021-03-17T20:43:10.105226+00:00 app[web.1]: "Artists.Songs.count" desc
2021-03-17T20:43:10.105227+00:00 app[web.1]: LIMIT 10
2021-03-17T20:43:10.109861+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:10.111840+00:00 app[web.1]: Executing (default): SELECT "mode", COUNT("mode") AS "count" FROM "Songs" AS "Songs" WHERE "Songs"."decadeId" = 4 AND ("Songs"."mode" != -1) GROUP BY "mode";
2021-03-17T20:43:10.117335+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1980 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1980;
2021-03-17T20:43:10.125184+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1981 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1981;
2021-03-17T20:43:10.130401+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1982 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1982;
2021-03-17T20:43:10.138936+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1983 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1983;
2021-03-17T20:43:10.150686+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1984 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1984;
2021-03-17T20:43:10.162759+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1985 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1985;
2021-03-17T20:43:10.167523+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1986 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1986;
2021-03-17T20:43:10.176670+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1987 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1987;
2021-03-17T20:43:10.186041+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1988 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1988;
2021-03-17T20:43:10.191776+00:00 app[web.1]: Executing (default): SELECT "Decade".*, "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt" FROM (SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' AND ( SELECT "decadeId" FROM "Songs" AS "Songs" WHERE ("Songs"."yearOfRelease" = 1989 AND "Songs"."decadeId" = "Decade"."id") LIMIT 1 ) IS NOT NULL LIMIT 1) AS "Decade" INNER JOIN "Songs" AS "Songs" ON "Decade"."id" = "Songs"."decadeId" AND "Songs"."yearOfRelease" = 1989;
2021-03-17T20:43:10.199213+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:10.200748+00:00 app[web.1]: Executing (default): select
2021-03-17T20:43:10.200749+00:00 app[web.1]: count(x.genre),
2021-03-17T20:43:10.200750+00:00 app[web.1]: genre
2021-03-17T20:43:10.200750+00:00 app[web.1]: from
2021-03-17T20:43:10.200751+00:00 app[web.1]: (
2021-03-17T20:43:10.200751+00:00 app[web.1]: select
2021-03-17T20:43:10.200752+00:00 app[web.1]: unnest(genres) as genre,
2021-03-17T20:43:10.200752+00:00 app[web.1]: name
2021-03-17T20:43:10.200753+00:00 app[web.1]: from
2021-03-17T20:43:10.200753+00:00 app[web.1]: "Artists"
2021-03-17T20:43:10.200754+00:00 app[web.1]: inner join
2021-03-17T20:43:10.200754+00:00 app[web.1]: "DecadeArtists"
2021-03-17T20:43:10.200755+00:00 app[web.1]: on "DecadeArtists"."artistId" = "Artists"."id"
2021-03-17T20:43:10.200755+00:00 app[web.1]: where
2021-03-17T20:43:10.200755+00:00 app[web.1]: "decadeId" = 4
2021-03-17T20:43:10.200756+00:00 app[web.1]: )
2021-03-17T20:43:10.200756+00:00 app[web.1]: as x
2021-03-17T20:43:10.200756+00:00 app[web.1]: group by
2021-03-17T20:43:10.200757+00:00 app[web.1]: x.genre
2021-03-17T20:43:10.200757+00:00 app[web.1]: order by count desc
2021-03-17T20:43:10.200758+00:00 app[web.1]: limit 10
2021-03-17T20:43:10.206625+00:00 app[web.1]: Executing (default): SELECT "Decade"."id", "Decade"."name", "Decade"."description", "Decade"."createdAt", "Decade"."updatedAt", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."genres" AS "Artists.genres" FROM "Decades" AS "Decade" LEFT OUTER JOIN ( "DecadeArtists" AS "Artists->DecadeArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->DecadeArtists"."artistId") ON "Decade"."id" = "Artists->DecadeArtists"."decadeId" WHERE "Decade"."name" = '1980' ORDER BY "Artists->DecadeArtists"."rank" asc;
2021-03-17T20:43:10.222564+00:00 app[web.1]: Executing (default): SELECT "description" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:10.250079+00:00 heroku[router]: at=info method=GET path="/decadeData?decade=1980&code=AQAYrvA4SpLWBax4d3DR8IWADa3LwNfA9hYCjbC11w-JYulDqT6ZYG1ndsri3RhNxlHbSSAQtC4WjrxSONP8YmfRDW-_BKsAOAiG2UJuwR84AJdFzfdCsdHSWovSVr7GYE2xtUo2H5_HQUlpwCsWXsO4EboMUVuNHXKscgk83TVlSpTV64M2zvZZYTv2d3Zrm2b1vtWZfwk1Jes_ROQDD3CEnA-epFHMZiUmg-0-DV_X5d_xzcQQ3j4zroJ-rA" host=musicthroughdecades.herokuapp.com request_id=468ccd54-b866-45e1-a683-d328db9ac557 fwd="174.89.36.96" dyno=web.1 connect=1ms service=2424ms status=200 bytes=27323 protocol=https
2021-03-17T20:43:10.983413+00:00 app[web.1]: Executing (default): INSERT INTO "tempUsers" ("id","sessionId","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3) RETURNING "id","sessionId","createdAt","updatedAt";
2021-03-17T20:43:14.431372+00:00 heroku[router]: at=info method=GET path="/static/css/2.d470c34f.chunk.css" host=musicthroughdecades.herokuapp.com request_id=d48c9e84-fb09-48ea-ab10-42cb072ee9e4 fwd="174.89.36.96" dyno=web.1 connect=1ms service=18ms status=304 bytes=239 protocol=https
2021-03-17T20:43:14.544478+00:00 heroku[router]: at=info method=GET path="/static/css/main.be8902c4.chunk.css" host=musicthroughdecades.herokuapp.com request_id=d8034445-254f-4b4c-b4fa-42c3c4b1f947 fwd="174.89.36.96" dyno=web.1 connect=1ms service=15ms status=304 bytes=238 protocol=https
2021-03-17T20:43:14.662826+00:00 heroku[router]: at=info method=GET path="/manifest.json" host=musicthroughdecades.herokuapp.com request_id=14cad6ac-cee4-4538-a931-c763e293ad31 fwd="174.89.36.96" dyno=web.1 connect=1ms service=23ms status=304 bytes=361 protocol=https
2021-03-17T20:43:14.872888+00:00 heroku[router]: at=info method=GET path="/static/css/2.d470c34f.chunk.css.map" host=musicthroughdecades.herokuapp.com request_id=e2a72aa7-ea08-49de-8cdb-41ae2c1e697f fwd="174.89.36.96" dyno=web.1 connect=1ms service=77ms status=200 bytes=628594 protocol=https
2021-03-17T20:43:14.916883+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6Kkt27YmFyIFrcX3QXFi2o' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:14.926918+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:14.936420+00:00 heroku[router]: at=info method=GET path="/static/css/main.be8902c4.chunk.css.map" host=musicthroughdecades.herokuapp.com request_id=c16743bf-b9f8-43cb-b661-620cb52623c4 fwd="174.89.36.96" dyno=web.1 connect=1ms service=23ms status=200 bytes=18989 protocol=https
2021-03-17T20:43:14.943494+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Lorde' AND "Artist"."imageURL" = 'https://i.scdn.co/image/d25fc756cd04c8b3ea196b7c07c6d057685cc405' LIMIT 1;
2021-03-17T20:43:14.946067+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:14.954059+00:00 app[web.1]: Executing (bafd4155-3deb-405f-a78b-febc398b1338): START TRANSACTION;
2021-03-17T20:43:14.958329+00:00 app[web.1]: Executing (bafd4155-3deb-405f-a78b-febc398b1338): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43364;
2021-03-17T20:43:14.961525+00:00 app[web.1]: Executing (bafd4155-3deb-405f-a78b-febc398b1338): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b4f2d725a642422493e5436ce27b8749$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43364,true,'2021-03-17 20:43:14.959 +00:00','2021-03-17 20:43:14.959 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b4f2d725a642422493e5436ce27b8749$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:14.967756+00:00 app[web.1]: Executing (bafd4155-3deb-405f-a78b-febc398b1338): COMMIT;
2021-03-17T20:43:14.972705+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:14.997866+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0nbXyq5TXYPCO7pr3N8S4I' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.004250+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.016402+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Roddy Ricch' AND "Artist"."imageURL" = 'https://i.scdn.co/image/020e997fb003cf666859a90b57ca0519df769d30' LIMIT 1;
2021-03-17T20:43:15.019563+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.039148+00:00 app[web.1]: Executing (efde0076-cd90-4b1e-90b7-925edbf63b00): START TRANSACTION;
2021-03-17T20:43:15.041243+00:00 app[web.1]: Executing (efde0076-cd90-4b1e-90b7-925edbf63b00): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43895;
2021-03-17T20:43:15.044206+00:00 app[web.1]: Executing (efde0076-cd90-4b1e-90b7-925edbf63b00): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_483dd0990f9a4c35ae98c2b2be493d31$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43895,true,'2021-03-17 20:43:15.042 +00:00','2021-03-17 20:43:15.042 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_483dd0990f9a4c35ae98c2b2be493d31$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.052841+00:00 app[web.1]: Executing (efde0076-cd90-4b1e-90b7-925edbf63b00): COMMIT;
2021-03-17T20:43:15.056905+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.065546+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '5BfMJ6iytQnu1r7iiCYSXe' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.079311+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.088323+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:15.094938+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.100607+00:00 app[web.1]: Executing (c1f7d8df-a755-43b7-9459-911a4e6ce833): START TRANSACTION;
2021-03-17T20:43:15.103108+00:00 app[web.1]: Executing (c1f7d8df-a755-43b7-9459-911a4e6ce833): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:15.105603+00:00 app[web.1]: Executing (c1f7d8df-a755-43b7-9459-911a4e6ce833): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_cdfc67131bf446c9b3fe6007ab6bf239$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43372,true,'2021-03-17 20:43:15.104 +00:00','2021-03-17 20:43:15.104 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_cdfc67131bf446c9b3fe6007ab6bf239$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.112353+00:00 app[web.1]: Executing (c1f7d8df-a755-43b7-9459-911a4e6ce833): COMMIT;
2021-03-17T20:43:15.122877+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.135595+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '36lkJSDyMEZoWTqtRj8Q8q' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.148603+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.153879+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Chicago' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8d22268af8be7c5ef34507f8f07ede7b93337337' LIMIT 1;
2021-03-17T20:43:15.165727+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.172939+00:00 app[web.1]: Executing (247ecdf1-526a-4923-9464-ba0dbbdc5112): START TRANSACTION;
2021-03-17T20:43:15.179665+00:00 app[web.1]: Executing (247ecdf1-526a-4923-9464-ba0dbbdc5112): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43502;
2021-03-17T20:43:15.188289+00:00 app[web.1]: Executing (247ecdf1-526a-4923-9464-ba0dbbdc5112): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_819fcee584214c7496f26fc9b77ff5c4$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43502,true,'2021-03-17 20:43:15.181 +00:00','2021-03-17 20:43:15.181 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_819fcee584214c7496f26fc9b77ff5c4$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.193150+00:00 app[web.1]: Executing (247ecdf1-526a-4923-9464-ba0dbbdc5112): COMMIT;
2021-03-17T20:43:15.202457+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.208060+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '4pvb0WLRcMtbPGmtejJJ6y' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.213471+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.219969+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Taylor Swift' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8389f45cac7a58e3ab67a3bdeb5b4a0f9d8f7919' LIMIT 1;
2021-03-17T20:43:15.222822+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.229543+00:00 app[web.1]: Executing (6c5f4422-296c-4804-881a-14e05aaf4a67): START TRANSACTION;
2021-03-17T20:43:15.233172+00:00 app[web.1]: Executing (6c5f4422-296c-4804-881a-14e05aaf4a67): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:15.247388+00:00 app[web.1]: Executing (6c5f4422-296c-4804-881a-14e05aaf4a67): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0d4ffd02a9ad47a48f2c918a44fae372$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43410,true,'2021-03-17 20:43:15.234 +00:00','2021-03-17 20:43:15.234 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0d4ffd02a9ad47a48f2c918a44fae372$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.251146+00:00 app[web.1]: Executing (6c5f4422-296c-4804-881a-14e05aaf4a67): COMMIT;
2021-03-17T20:43:15.253884+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Bon Iver' AND "Artist"."imageURL" = 'https://i.scdn.co/image/d5ea2b221938b03e2096ef2c2caf2a0558014c1e' LIMIT 1;
2021-03-17T20:43:15.256547+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.264375+00:00 app[web.1]: Executing (4854741e-4a69-49bf-836c-22fa446ca073): START TRANSACTION;
2021-03-17T20:43:15.267765+00:00 app[web.1]: Executing (4854741e-4a69-49bf-836c-22fa446ca073): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43877;
2021-03-17T20:43:15.271991+00:00 app[web.1]: Executing (4854741e-4a69-49bf-836c-22fa446ca073): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_6463c3e668eb47a6a4f55fda7e211d59$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43877,true,'2021-03-17 20:43:15.268 +00:00','2021-03-17 20:43:15.268 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_6463c3e668eb47a6a4f55fda7e211d59$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.274912+00:00 app[web.1]: Executing (4854741e-4a69-49bf-836c-22fa446ca073): COMMIT;
2021-03-17T20:43:15.278743+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.284731+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '5O2P9iiztwhomNh8xkR9lJ' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.295882+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.300657+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'One Direction' AND "Artist"."imageURL" = 'https://i.scdn.co/image/5bb443424a1ad71603c43d67f5af1a04da6bb3c8' LIMIT 1;
2021-03-17T20:43:15.305828+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:15.313727+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58184 AND "SongArtists"."artistId" IN (43897);
2021-03-17T20:43:15.316516+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58184,43897,'2021-03-17 20:43:15.314 +00:00','2021-03-17 20:43:15.314 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.322127+00:00 app[web.1]: Executing (dd2d9b33-2bd4-468c-814c-a0f196c7b776): START TRANSACTION;
2021-03-17T20:43:15.324498+00:00 app[web.1]: Executing (dd2d9b33-2bd4-468c-814c-a0f196c7b776): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43897;
2021-03-17T20:43:15.327485+00:00 app[web.1]: Executing (dd2d9b33-2bd4-468c-814c-a0f196c7b776): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_010d970208e64e14988e5241e5cfc48a$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43897,true,'2021-03-17 20:43:15.325 +00:00','2021-03-17 20:43:15.325 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_010d970208e64e14988e5241e5cfc48a$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.334843+00:00 app[web.1]: Executing (dd2d9b33-2bd4-468c-814c-a0f196c7b776): COMMIT;
2021-03-17T20:43:15.338221+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.345155+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '4uTvPEr01pjTbZgl7jcKBD' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.353002+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.356404+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Ariana Grande' AND "Artist"."imageURL" = 'https://i.scdn.co/image/f8c793519d837ca2f920c561535fe62ef32e8e5b' LIMIT 1;
2021-03-17T20:43:15.362609+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.365377+00:00 app[web.1]: Executing (35ce3cb1-487c-4868-af20-2deef8a742bb): START TRANSACTION;
2021-03-17T20:43:15.369558+00:00 app[web.1]: Executing (35ce3cb1-487c-4868-af20-2deef8a742bb): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43395;
2021-03-17T20:43:15.371878+00:00 app[web.1]: Executing (35ce3cb1-487c-4868-af20-2deef8a742bb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_30ddb17ecfec4344bb4d866230d23a4c$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43395,true,'2021-03-17 20:43:15.370 +00:00','2021-03-17 20:43:15.370 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_30ddb17ecfec4344bb4d866230d23a4c$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.375315+00:00 app[web.1]: Executing (35ce3cb1-487c-4868-af20-2deef8a742bb): COMMIT;
2021-03-17T20:43:15.379080+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.386566+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '2kAIpGWnlFLQh48iut6Zzq' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.389932+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.396413+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:15.402684+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.405522+00:00 app[web.1]: Executing (d998c13a-0854-484c-be6c-8171df87c6d0): START TRANSACTION;
2021-03-17T20:43:15.416693+00:00 app[web.1]: Executing (d998c13a-0854-484c-be6c-8171df87c6d0): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:15.418117+00:00 app[web.1]: Executing (d998c13a-0854-484c-be6c-8171df87c6d0): COMMIT;
2021-03-17T20:43:15.420097+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:15.422818+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.429080+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '3KkXRkHbMCARz0aVfEt68P' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.432524+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:43:15.433141+00:00 app[web.1]: Executing (53e92686-795b-4d53-aac8-0fc9f1498201): START TRANSACTION;
2021-03-17T20:43:15.436084+00:00 app[web.1]: Executing (53e92686-795b-4d53-aac8-0fc9f1498201): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57865;
2021-03-17T20:43:15.440462+00:00 app[web.1]: Executing (53e92686-795b-4d53-aac8-0fc9f1498201): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_660c87dd69264c7183573af87fb9d81e$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57865,9,'2021-03-17 20:43:15.437 +00:00','2021-03-17 20:43:15.437 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_660c87dd69264c7183573af87fb9d81e$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.445427+00:00 app[web.1]: Executing (53e92686-795b-4d53-aac8-0fc9f1498201): COMMIT;
2021-03-17T20:43:15.447818+00:00 app[web.1]: Executing (8db8dcd1-8234-41ed-a53a-3aa5219a7262): START TRANSACTION;
2021-03-17T20:43:15.450906+00:00 app[web.1]: Executing (8db8dcd1-8234-41ed-a53a-3aa5219a7262): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43365 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:15.453309+00:00 app[web.1]: Executing (8db8dcd1-8234-41ed-a53a-3aa5219a7262): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_686003b4cb96423f969eaf36e4744a16$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43365,true,'2021-03-17 20:43:15.451 +00:00','2021-03-17 20:43:15.451 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_686003b4cb96423f969eaf36e4744a16$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.462262+00:00 app[web.1]: Executing (8db8dcd1-8234-41ed-a53a-3aa5219a7262): COMMIT;
2021-03-17T20:43:15.467956+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43365;
2021-03-17T20:43:15.469594+00:00 app[web.1]: Executing (3202d586-3a56-4409-85c7-65671933a66b): START TRANSACTION;
2021-03-17T20:43:15.474216+00:00 app[web.1]: Executing (3202d586-3a56-4409-85c7-65671933a66b): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43366 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:15.476598+00:00 app[web.1]: Executing (3202d586-3a56-4409-85c7-65671933a66b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ce8f28aa57e2426f8ea779219972d1b3$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43366,true,'2021-03-17 20:43:15.475 +00:00','2021-03-17 20:43:15.475 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ce8f28aa57e2426f8ea779219972d1b3$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.482475+00:00 app[web.1]: Executing (3202d586-3a56-4409-85c7-65671933a66b): COMMIT;
2021-03-17T20:43:15.485026+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43366;
2021-03-17T20:43:15.488116+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6qnM0XXPZOINWA778uNqQ9' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.493280+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.501245+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Taylor Swift' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8389f45cac7a58e3ab67a3bdeb5b4a0f9d8f7919' LIMIT 1;
2021-03-17T20:43:15.506559+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.509155+00:00 app[web.1]: Executing (40bcb7de-a288-48b2-9eb8-056267f383eb): START TRANSACTION;
2021-03-17T20:43:15.510665+00:00 app[web.1]: Executing (40bcb7de-a288-48b2-9eb8-056267f383eb): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:15.515520+00:00 app[web.1]: Executing (40bcb7de-a288-48b2-9eb8-056267f383eb): COMMIT;
2021-03-17T20:43:15.517062+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:15.519554+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.535375+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '4LFwNJWoj74Yd71fIr1W8x' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.537773+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:43:15.538248+00:00 app[web.1]: Executing (761572ea-cf1a-46e9-9e74-63a0972b0ec0): START TRANSACTION;
2021-03-17T20:43:15.539721+00:00 app[web.1]: Executing (761572ea-cf1a-46e9-9e74-63a0972b0ec0): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57616;
2021-03-17T20:43:15.541892+00:00 app[web.1]: Executing (761572ea-cf1a-46e9-9e74-63a0972b0ec0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c1e00ed127f048d498ad65ea8f33cdd0$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57616,11,'2021-03-17 20:43:15.540 +00:00','2021-03-17 20:43:15.540 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c1e00ed127f048d498ad65ea8f33cdd0$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.547357+00:00 app[web.1]: Executing (761572ea-cf1a-46e9-9e74-63a0972b0ec0): COMMIT;
2021-03-17T20:43:15.550253+00:00 app[web.1]: Executing (8330e857-de66-4912-adaf-98bf93a316a2): START TRANSACTION;
2021-03-17T20:43:15.551804+00:00 app[web.1]: Executing (8330e857-de66-4912-adaf-98bf93a316a2): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43606 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:15.554055+00:00 app[web.1]: Executing (8330e857-de66-4912-adaf-98bf93a316a2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8a2b7f72de67473a84cac5cdf628d96c$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43606,true,'2021-03-17 20:43:15.552 +00:00','2021-03-17 20:43:15.552 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8a2b7f72de67473a84cac5cdf628d96c$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.556516+00:00 app[web.1]: Executing (8330e857-de66-4912-adaf-98bf93a316a2): COMMIT;
2021-03-17T20:43:15.559433+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43606;
2021-03-17T20:43:15.568208+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '7lUA4P03AhwAw40JHkdyGr' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.571560+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.582383+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Beyonc√©' AND "Artist"."imageURL" = 'https://i.scdn.co/image/ad8b0e5a18a5a443a2678768bd73f59833941abc' LIMIT 1;
2021-03-17T20:43:15.589192+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.593286+00:00 app[web.1]: Executing (0e905e27-6d14-4075-b686-4e5711eeccd8): START TRANSACTION;
2021-03-17T20:43:15.596056+00:00 app[web.1]: Executing (0e905e27-6d14-4075-b686-4e5711eeccd8): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43376;
2021-03-17T20:43:15.600176+00:00 app[web.1]: Executing (0e905e27-6d14-4075-b686-4e5711eeccd8): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_ba0ed4ac65a644d5800aac3ea5f825f4$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43376,true,'2021-03-17 20:43:15.597 +00:00','2021-03-17 20:43:15.597 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_ba0ed4ac65a644d5800aac3ea5f825f4$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.604411+00:00 app[web.1]: Executing (0e905e27-6d14-4075-b686-4e5711eeccd8): COMMIT;
2021-03-17T20:43:15.616373+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.625613+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0QZ5yyl6B6utIWkxeBDxQN' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.631900+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.639644+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Lord Huron' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8d4ed8d0c5caa942db27f2a6dd382a1e4d8fe620' LIMIT 1;
2021-03-17T20:43:15.642554+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.648828+00:00 app[web.1]: Executing (9c3ab096-cba0-46b7-8ab0-03c73c76a4a5): START TRANSACTION;
2021-03-17T20:43:15.650137+00:00 app[web.1]: Executing (9c3ab096-cba0-46b7-8ab0-03c73c76a4a5): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43896;
2021-03-17T20:43:15.652290+00:00 app[web.1]: Executing (9c3ab096-cba0-46b7-8ab0-03c73c76a4a5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_e9e0bd0ae75944afa05017ff3b7a6b13$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43896,true,'2021-03-17 20:43:15.651 +00:00','2021-03-17 20:43:15.651 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_e9e0bd0ae75944afa05017ff3b7a6b13$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.656234+00:00 app[web.1]: Executing (9c3ab096-cba0-46b7-8ab0-03c73c76a4a5): COMMIT;
2021-03-17T20:43:15.661103+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.677704+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '1NgCWYuBLfqBDA3b8MgSVU' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.681922+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.690460+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:15.693558+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.696420+00:00 app[web.1]: Executing (b77d326b-3571-4e54-96d8-44abb633ac47): START TRANSACTION;
2021-03-17T20:43:15.697756+00:00 app[web.1]: Executing (b77d326b-3571-4e54-96d8-44abb633ac47): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:15.699006+00:00 app[web.1]: Executing (b77d326b-3571-4e54-96d8-44abb633ac47): COMMIT;
2021-03-17T20:43:15.700397+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:15.703074+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.713212+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '2vsuel3g4zaLYSOY0mOMbi' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.720674+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.726371+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:15.736488+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.739207+00:00 app[web.1]: Executing (7b21d8f6-45dc-47c8-99e4-6715a78327f1): START TRANSACTION;
2021-03-17T20:43:15.748285+00:00 app[web.1]: Executing (7b21d8f6-45dc-47c8-99e4-6715a78327f1): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:15.749803+00:00 app[web.1]: Executing (7b21d8f6-45dc-47c8-99e4-6715a78327f1): COMMIT;
2021-03-17T20:43:15.753333+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:15.755799+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.764491+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '5QO79kh1waicV47BqGRL3g' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.772643+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.776060+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'The Weeknd' AND "Artist"."imageURL" = 'https://i.scdn.co/image/37376dba0623c33923eae9d234e5e199b76d227f' LIMIT 1;
2021-03-17T20:43:15.779156+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.781684+00:00 app[web.1]: Executing (922e4c80-1a8c-4310-9c01-be7a622aa508): START TRANSACTION;
2021-03-17T20:43:15.783836+00:00 app[web.1]: Executing (922e4c80-1a8c-4310-9c01-be7a622aa508): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43370;
2021-03-17T20:43:15.788558+00:00 app[web.1]: Executing (922e4c80-1a8c-4310-9c01-be7a622aa508): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a592a90596594c058369c5ae3a4425f7$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43370,true,'2021-03-17 20:43:15.785 +00:00','2021-03-17 20:43:15.785 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a592a90596594c058369c5ae3a4425f7$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.793766+00:00 app[web.1]: Executing (922e4c80-1a8c-4310-9c01-be7a622aa508): COMMIT;
2021-03-17T20:43:15.797299+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.804758+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6NFyWDv5CjfwuzoCkw47Xf' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.808376+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.813886+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Taylor Swift' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8389f45cac7a58e3ab67a3bdeb5b4a0f9d8f7919' LIMIT 1;
2021-03-17T20:43:15.818461+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.821115+00:00 app[web.1]: Executing (012472ff-a7b0-4e44-b8d6-eb0a9463b062): START TRANSACTION;
2021-03-17T20:43:15.822561+00:00 app[web.1]: Executing (012472ff-a7b0-4e44-b8d6-eb0a9463b062): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:15.824019+00:00 app[web.1]: Executing (012472ff-a7b0-4e44-b8d6-eb0a9463b062): COMMIT;
2021-03-17T20:43:15.829472+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:15.832118+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.838247+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '7boKWlaNVmrhJdX8IbzUdD' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.844997+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:43:15.846211+00:00 app[web.1]: Executing (9df1f748-feb2-493e-866e-552ffb077f32): START TRANSACTION;
2021-03-17T20:43:15.847775+00:00 app[web.1]: Executing (9df1f748-feb2-493e-866e-552ffb077f32): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57652;
2021-03-17T20:43:15.859147+00:00 app[web.1]: Executing (9df1f748-feb2-493e-866e-552ffb077f32): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_48103ab6331e407490b08ae1bb389f08$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57652,18,'2021-03-17 20:43:15.848 +00:00','2021-03-17 20:43:15.848 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_48103ab6331e407490b08ae1bb389f08$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:15.864515+00:00 app[web.1]: Executing (9df1f748-feb2-493e-866e-552ffb077f32): COMMIT;
2021-03-17T20:43:15.870850+00:00 app[web.1]: Executing (301d0daf-6575-4ab4-bd8a-7ed2f03f4e22): START TRANSACTION;
2021-03-17T20:43:15.880498+00:00 app[web.1]: Executing (301d0daf-6575-4ab4-bd8a-7ed2f03f4e22): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43502 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:15.889471+00:00 app[web.1]: Executing (301d0daf-6575-4ab4-bd8a-7ed2f03f4e22): COMMIT;
2021-03-17T20:43:15.894721+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43502;
2021-03-17T20:43:15.897375+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0lx2cLdOt3piJbcaXIV74f' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.915794+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.920395+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Taylor Swift' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8389f45cac7a58e3ab67a3bdeb5b4a0f9d8f7919' LIMIT 1;
2021-03-17T20:43:15.953364+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:15.963618+00:00 app[web.1]: Executing (6c91849f-0a83-4daa-b739-8087c28c0145): START TRANSACTION;
2021-03-17T20:43:15.965818+00:00 app[web.1]: Executing (6c91849f-0a83-4daa-b739-8087c28c0145): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:15.971605+00:00 app[web.1]: Executing (6c91849f-0a83-4daa-b739-8087c28c0145): COMMIT;
2021-03-17T20:43:15.973397+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:15.977579+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:15.981589+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '12VqHHz4wvVcnEdSivjLeQ' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:15.991738+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:15.998391+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:16.001092+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.005796+00:00 app[web.1]: Executing (77892c1a-13c6-43ce-8bad-45bbc50d8339): START TRANSACTION;
2021-03-17T20:43:16.007234+00:00 app[web.1]: Executing (77892c1a-13c6-43ce-8bad-45bbc50d8339): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:16.008490+00:00 app[web.1]: Executing (77892c1a-13c6-43ce-8bad-45bbc50d8339): COMMIT;
2021-03-17T20:43:16.009833+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:16.013844+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.018549+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '2XKFnwB6djxrJCjR3PdeRb' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.023962+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.034905+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:16.043078+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.046001+00:00 app[web.1]: Executing (23771852-0f97-4b60-843e-fcb653021295): START TRANSACTION;
2021-03-17T20:43:16.049094+00:00 app[web.1]: Executing (23771852-0f97-4b60-843e-fcb653021295): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:16.050232+00:00 app[web.1]: Executing (23771852-0f97-4b60-843e-fcb653021295): COMMIT;
2021-03-17T20:43:16.051843+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:16.053981+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.075765+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '2cX2coZS1PYBfPs8wgbdWE' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.080714+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.091044+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Bee Gees' AND "Artist"."imageURL" = 'https://i.scdn.co/image/1d5a05673975ba0c378cd280344e000b0b865620' LIMIT 1;
2021-03-17T20:43:16.095222+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.103566+00:00 app[web.1]: Executing (2f3281ad-81dc-4594-a947-f25f0271cbc0): START TRANSACTION;
2021-03-17T20:43:16.105480+00:00 app[web.1]: Executing (2f3281ad-81dc-4594-a947-f25f0271cbc0): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43321;
2021-03-17T20:43:16.111236+00:00 app[web.1]: Executing (2f3281ad-81dc-4594-a947-f25f0271cbc0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a9e1189eadcf4c8c8b6b57e39d8b4666$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43321,true,'2021-03-17 20:43:16.109 +00:00','2021-03-17 20:43:16.109 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a9e1189eadcf4c8c8b6b57e39d8b4666$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.114436+00:00 app[web.1]: Executing (2f3281ad-81dc-4594-a947-f25f0271cbc0): COMMIT;
2021-03-17T20:43:16.117969+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.130417+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '5BK0uqwY9DNfZ630STAEaq' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.136845+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.141684+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Taylor Swift' AND "Artist"."imageURL" = 'https://i.scdn.co/image/8389f45cac7a58e3ab67a3bdeb5b4a0f9d8f7919' LIMIT 1;
2021-03-17T20:43:16.144152+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.154216+00:00 app[web.1]: Executing (545e3fb9-d6c1-40a5-a3c7-d7624c76ea3c): START TRANSACTION;
2021-03-17T20:43:16.163746+00:00 app[web.1]: Executing (545e3fb9-d6c1-40a5-a3c7-d7624c76ea3c): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:16.165246+00:00 app[web.1]: Executing (545e3fb9-d6c1-40a5-a3c7-d7624c76ea3c): COMMIT;
2021-03-17T20:43:16.167391+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43410;
2021-03-17T20:43:16.170059+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.174542+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6FE2iI43OZnszFLuLtvvmg' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.181155+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.190220+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'MKTO' AND "Artist"."imageURL" = 'https://i.scdn.co/image/23ce63b04f7edb4d337e3213336aed9f3a1d0b4c' LIMIT 1;
2021-03-17T20:43:16.193816+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.196769+00:00 app[web.1]: Executing (a9d06d63-bec6-4e4f-bdd6-aa8a302081dd): START TRANSACTION;
2021-03-17T20:43:16.202234+00:00 app[web.1]: Executing (a9d06d63-bec6-4e4f-bdd6-aa8a302081dd): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43387;
2021-03-17T20:43:16.204535+00:00 app[web.1]: Executing (a9d06d63-bec6-4e4f-bdd6-aa8a302081dd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_d0020ac534bd4d99947beec0fc2a2a53$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43387,true,'2021-03-17 20:43:16.203 +00:00','2021-03-17 20:43:16.203 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_d0020ac534bd4d99947beec0fc2a2a53$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.212138+00:00 app[web.1]: Executing (a9d06d63-bec6-4e4f-bdd6-aa8a302081dd): COMMIT;
2021-03-17T20:43:16.216206+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.223893+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '5hc71nKsUgtwQ3z52KEKQk' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.229608+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.237509+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'The 1975' AND "Artist"."imageURL" = 'https://i.scdn.co/image/94dd2feca73bdfb7e1c12751b499ec0a46024866' LIMIT 1;
2021-03-17T20:43:16.255568+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.277622+00:00 app[web.1]: Executing (0e2c8b5b-6d85-4ade-9a1f-0217d4670830): START TRANSACTION;
2021-03-17T20:43:16.290186+00:00 app[web.1]: Executing (0e2c8b5b-6d85-4ade-9a1f-0217d4670830): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43880;
2021-03-17T20:43:16.292828+00:00 app[web.1]: Executing (0e2c8b5b-6d85-4ade-9a1f-0217d4670830): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2bb9801531514949a52aa5e9dd35729a$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43880,true,'2021-03-17 20:43:16.291 +00:00','2021-03-17 20:43:16.291 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2bb9801531514949a52aa5e9dd35729a$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.299309+00:00 app[web.1]: Executing (0e2c8b5b-6d85-4ade-9a1f-0217d4670830): COMMIT;
2021-03-17T20:43:16.307099+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.328577+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6fOOKqQWcSy33ApU1wqkkW' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.340788+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.354244+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:16.357663+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.363553+00:00 app[web.1]: Executing (99cce6e4-4d16-469c-aa1d-ab8cb0dd507f): START TRANSACTION;
2021-03-17T20:43:16.371601+00:00 app[web.1]: Executing (99cce6e4-4d16-469c-aa1d-ab8cb0dd507f): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:16.379318+00:00 app[web.1]: Executing (99cce6e4-4d16-469c-aa1d-ab8cb0dd507f): COMMIT;
2021-03-17T20:43:16.380908+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:16.391663+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.400855+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '339Y993TrFyWyO438be0RY' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.417898+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.436088+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:16.438679+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.450259+00:00 app[web.1]: Executing (3136ff5e-58a9-4337-b00b-24a9842e991c): START TRANSACTION;
2021-03-17T20:43:16.452650+00:00 app[web.1]: Executing (3136ff5e-58a9-4337-b00b-24a9842e991c): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:16.454419+00:00 app[web.1]: Executing (3136ff5e-58a9-4337-b00b-24a9842e991c): COMMIT;
2021-03-17T20:43:16.463342+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:16.471909+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.477943+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6TvxPS4fj4LUdjw2es4g21' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.491567+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.496184+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'ABBA' AND "Artist"."imageURL" = 'https://i.scdn.co/image/6dec77bd3cdd0c634a1c9400c3c7fe8b0f1aa56e' LIMIT 1;
2021-03-17T20:43:16.498817+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.502060+00:00 app[web.1]: Executing (b8e2d527-fafd-44c1-9ca7-7505ad02f718): START TRANSACTION;
2021-03-17T20:43:16.510644+00:00 app[web.1]: Executing (b8e2d527-fafd-44c1-9ca7-7505ad02f718): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43487;
2021-03-17T20:43:16.513487+00:00 app[web.1]: Executing (b8e2d527-fafd-44c1-9ca7-7505ad02f718): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_894fa29232a849d0899ce2b9dad59d2e$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43487,true,'2021-03-17 20:43:16.511 +00:00','2021-03-17 20:43:16.511 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_894fa29232a849d0899ce2b9dad59d2e$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.523795+00:00 app[web.1]: Executing (b8e2d527-fafd-44c1-9ca7-7505ad02f718): COMMIT;
2021-03-17T20:43:16.526713+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.540252+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0kHsXoIt6dONEdkgKgyjoK' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.554772+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.568495+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Kristen Anderson-Lopez' AND "Artist"."imageURL" = 'https://i.scdn.co/image/ab67616d0000b273374bbe82f1abe6921b1488fa' LIMIT 1;
2021-03-17T20:43:16.581081+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:16.587501+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58204 AND "SongArtists"."artistId" IN (43898);
2021-03-17T20:43:16.594491+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58204,43898,'2021-03-17 20:43:16.593 +00:00','2021-03-17 20:43:16.593 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.601503+00:00 app[web.1]: Executing (0466a76f-aedc-498c-8358-daaa4a18b60b): START TRANSACTION;
2021-03-17T20:43:16.603133+00:00 app[web.1]: Executing (0466a76f-aedc-498c-8358-daaa4a18b60b): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43898;
2021-03-17T20:43:16.614091+00:00 app[web.1]: Executing (0466a76f-aedc-498c-8358-daaa4a18b60b): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_86d16205808340ffa77fb4c113b6a40a$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43898,true,'2021-03-17 20:43:16.608 +00:00','2021-03-17 20:43:16.608 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_86d16205808340ffa77fb4c113b6a40a$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.615335+00:00 app[web.1]: Executing (0466a76f-aedc-498c-8358-daaa4a18b60b): COMMIT;
2021-03-17T20:43:16.619128+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Robert Lopez' AND "Artist"."imageURL" = 'https://i.scdn.co/image/ab67616d0000b273374bbe82f1abe6921b1488fa' LIMIT 1;
2021-03-17T20:43:16.626898+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:16.633000+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58204 AND "SongArtists"."artistId" IN (43899);
2021-03-17T20:43:16.635877+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58204,43899,'2021-03-17 20:43:16.634 +00:00','2021-03-17 20:43:16.634 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.639805+00:00 app[web.1]: Executing (f48f0beb-8d50-4b3d-9d29-16fc44d04b63): START TRANSACTION;
2021-03-17T20:43:16.642785+00:00 app[web.1]: Executing (f48f0beb-8d50-4b3d-9d29-16fc44d04b63): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43899;
2021-03-17T20:43:16.648828+00:00 app[web.1]: Executing (f48f0beb-8d50-4b3d-9d29-16fc44d04b63): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_281998aaff2d4588a560f0c2c20c7626$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43899,true,'2021-03-17 20:43:16.644 +00:00','2021-03-17 20:43:16.644 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_281998aaff2d4588a560f0c2c20c7626$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.651604+00:00 app[web.1]: Executing (f48f0beb-8d50-4b3d-9d29-16fc44d04b63): COMMIT;
2021-03-17T20:43:16.658442+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Kathryn Hahn' AND "Artist"."imageURL" = 'https://i.scdn.co/image/ab67616d0000b2734ab3fcd5158d4c55c47256f5' LIMIT 1;
2021-03-17T20:43:16.665490+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:16.676175+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58204 AND "SongArtists"."artistId" IN (43900);
2021-03-17T20:43:16.682002+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58204,43900,'2021-03-17 20:43:16.677 +00:00','2021-03-17 20:43:16.677 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.685751+00:00 app[web.1]: Executing (ec1ebc8a-3f47-4240-9663-cd49c094e2c2): START TRANSACTION;
2021-03-17T20:43:16.687460+00:00 app[web.1]: Executing (ec1ebc8a-3f47-4240-9663-cd49c094e2c2): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43900;
2021-03-17T20:43:16.694601+00:00 app[web.1]: Executing (ec1ebc8a-3f47-4240-9663-cd49c094e2c2): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8d58b4e4cc8e4a65bd5dae8d3eaf39d5$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43900,true,'2021-03-17 20:43:16.693 +00:00','2021-03-17 20:43:16.693 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8d58b4e4cc8e4a65bd5dae8d3eaf39d5$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.697285+00:00 app[web.1]: Executing (ec1ebc8a-3f47-4240-9663-cd49c094e2c2): COMMIT;
2021-03-17T20:43:16.702472+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Eric Bradley' AND "Artist"."imageURL" = '' LIMIT 1;
2021-03-17T20:43:16.706546+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:16.710710+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58204 AND "SongArtists"."artistId" IN (43901);
2021-03-17T20:43:16.714529+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58204,43901,'2021-03-17 20:43:16.713 +00:00','2021-03-17 20:43:16.713 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.717780+00:00 app[web.1]: Executing (55c520ba-c80c-40e8-bd1c-b3bec95956c0): START TRANSACTION;
2021-03-17T20:43:16.719326+00:00 app[web.1]: Executing (55c520ba-c80c-40e8-bd1c-b3bec95956c0): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43901;
2021-03-17T20:43:16.724338+00:00 app[web.1]: Executing (55c520ba-c80c-40e8-bd1c-b3bec95956c0): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_dbb55cacfa294cb0ae263c9725d84dc8$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43901,true,'2021-03-17 20:43:16.723 +00:00','2021-03-17 20:43:16.723 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_dbb55cacfa294cb0ae263c9725d84dc8$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.728350+00:00 app[web.1]: Executing (55c520ba-c80c-40e8-bd1c-b3bec95956c0): COMMIT;
2021-03-17T20:43:16.731117+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Greg Whipple' AND "Artist"."imageURL" = '' LIMIT 1;
2021-03-17T20:43:16.735638+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:16.740803+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58204 AND "SongArtists"."artistId" IN (43902);
2021-03-17T20:43:16.743760+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58204,43902,'2021-03-17 20:43:16.742 +00:00','2021-03-17 20:43:16.742 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.746227+00:00 app[web.1]: Executing (3cb77b69-2228-4e50-a5e4-371a8c3a4af5): START TRANSACTION;
2021-03-17T20:43:16.755148+00:00 app[web.1]: Executing (3cb77b69-2228-4e50-a5e4-371a8c3a4af5): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43902;
2021-03-17T20:43:16.763994+00:00 app[web.1]: Executing (3cb77b69-2228-4e50-a5e4-371a8c3a4af5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c0468eae75fd4f8989dcfac6164b71e6$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43902,true,'2021-03-17 20:43:16.762 +00:00','2021-03-17 20:43:16.762 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c0468eae75fd4f8989dcfac6164b71e6$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.771962+00:00 app[web.1]: Executing (3cb77b69-2228-4e50-a5e4-371a8c3a4af5): COMMIT;
2021-03-17T20:43:16.774232+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Jasper Randall' AND "Artist"."imageURL" = 'https://i.scdn.co/image/ab67616d0000b27333ec0ac1c97b682200b95131' LIMIT 1;
2021-03-17T20:43:16.787134+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:16.792812+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58204 AND "SongArtists"."artistId" IN (43903);
2021-03-17T20:43:16.801458+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58204,43903,'2021-03-17 20:43:16.800 +00:00','2021-03-17 20:43:16.800 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.803808+00:00 app[web.1]: Executing (8dd436a4-67bc-4c91-8d4c-6b9e4336fe06): START TRANSACTION;
2021-03-17T20:43:16.807414+00:00 app[web.1]: Executing (8dd436a4-67bc-4c91-8d4c-6b9e4336fe06): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43903;
2021-03-17T20:43:16.812753+00:00 app[web.1]: Executing (8dd436a4-67bc-4c91-8d4c-6b9e4336fe06): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2cda2a4d322648288c619f6cf63a59db$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43903,true,'2021-03-17 20:43:16.809 +00:00','2021-03-17 20:43:16.809 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2cda2a4d322648288c619f6cf63a59db$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.815285+00:00 app[web.1]: Executing (8dd436a4-67bc-4c91-8d4c-6b9e4336fe06): COMMIT;
2021-03-17T20:43:16.819748+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Gerald White' AND "Artist"."imageURL" = 'https://i.scdn.co/image/ab67616d0000b273378855f0b94e3d1a9880f9b6' LIMIT 1;
2021-03-17T20:43:16.825777+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:16.831573+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58204 AND "SongArtists"."artistId" IN (43904);
2021-03-17T20:43:16.833684+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58204,43904,'2021-03-17 20:43:16.832 +00:00','2021-03-17 20:43:16.832 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:16.836295+00:00 app[web.1]: Executing (18932e44-e163-4e1c-b01e-0501aeaa6ea5): START TRANSACTION;
2021-03-17T20:43:16.838608+00:00 app[web.1]: Executing (18932e44-e163-4e1c-b01e-0501aeaa6ea5): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43904;
2021-03-17T20:43:16.848640+00:00 app[web.1]: Executing (18932e44-e163-4e1c-b01e-0501aeaa6ea5): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_f8a3a55ec59345d998e1371cd9c37263$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43904,true,'2021-03-17 20:43:16.847 +00:00','2021-03-17 20:43:16.847 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_f8a3a55ec59345d998e1371cd9c37263$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.851516+00:00 app[web.1]: Executing (18932e44-e163-4e1c-b01e-0501aeaa6ea5): COMMIT;
2021-03-17T20:43:16.856615+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:16.884623+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '44AyOl4qVkzS48vBsbNXaC' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.887986+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:43:16.889484+00:00 app[web.1]: Executing (b2dae3b1-ef7b-4233-aa68-2030dc19e31a): START TRANSACTION;
2021-03-17T20:43:16.891276+00:00 app[web.1]: Executing (b2dae3b1-ef7b-4233-aa68-2030dc19e31a): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57274;
2021-03-17T20:43:16.897151+00:00 app[web.1]: Executing (b2dae3b1-ef7b-4233-aa68-2030dc19e31a): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4d943f409bc24104b7926134a1e25f52$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57274,30,'2021-03-17 20:43:16.895 +00:00','2021-03-17 20:43:16.895 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4d943f409bc24104b7926134a1e25f52$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.908076+00:00 app[web.1]: Executing (b2dae3b1-ef7b-4233-aa68-2030dc19e31a): COMMIT;
2021-03-17T20:43:16.915803+00:00 app[web.1]: Executing (32951f19-9d70-4380-aa35-b59ee9efa3d4): START TRANSACTION;
2021-03-17T20:43:16.920026+00:00 app[web.1]: Executing (32951f19-9d70-4380-aa35-b59ee9efa3d4): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43306 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:16.922733+00:00 app[web.1]: Executing (32951f19-9d70-4380-aa35-b59ee9efa3d4): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_4432006638ee4fedbbff38e7d8968dd8$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43306,true,'2021-03-17 20:43:16.920 +00:00','2021-03-17 20:43:16.920 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_4432006638ee4fedbbff38e7d8968dd8$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:16.927848+00:00 app[web.1]: Executing (32951f19-9d70-4380-aa35-b59ee9efa3d4): COMMIT;
2021-03-17T20:43:16.939309+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43306;
2021-03-17T20:43:16.948567+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '5A1w94uzc1kO1Zhe8WWxC3' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:16.957757+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:16.970976+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:16.978444+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.008611+00:00 app[web.1]: Executing (94b047b3-c3cf-40bc-b468-2962c4e554e8): START TRANSACTION;
2021-03-17T20:43:17.019211+00:00 app[web.1]: Executing (94b047b3-c3cf-40bc-b468-2962c4e554e8): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:17.024605+00:00 app[web.1]: Executing (94b047b3-c3cf-40bc-b468-2962c4e554e8): COMMIT;
2021-03-17T20:43:17.029379+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:17.035368+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.106449+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6RUKPb4LETWmmr3iAEQktW' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.112980+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:17.134028+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'The Chainsmokers' AND "Artist"."imageURL" = 'https://i.scdn.co/image/960547a625bc2eb742bb3dd170cbc049d2e94cf9' LIMIT 1;
2021-03-17T20:43:17.142018+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.145652+00:00 app[web.1]: Executing (03bf5b21-c7a9-49da-b073-921d24127d12): START TRANSACTION;
2021-03-17T20:43:17.158739+00:00 app[web.1]: Executing (03bf5b21-c7a9-49da-b073-921d24127d12): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43804;
2021-03-17T20:43:17.175037+00:00 app[web.1]: Executing (03bf5b21-c7a9-49da-b073-921d24127d12): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_60fec0a671084220a93b628ad296ae7a$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43804,true,'2021-03-17 20:43:17.168 +00:00','2021-03-17 20:43:17.168 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_60fec0a671084220a93b628ad296ae7a$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:17.178879+00:00 app[web.1]: Executing (03bf5b21-c7a9-49da-b073-921d24127d12): COMMIT;
2021-03-17T20:43:17.185146+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Coldplay' AND "Artist"."imageURL" = 'https://i.scdn.co/image/4ffd6710617d289699cc0df60cf975e316025119' LIMIT 1;
2021-03-17T20:43:17.191408+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.200976+00:00 app[web.1]: Executing (5a8e0d48-b05b-4622-a4b0-82948eed01cb): START TRANSACTION;
2021-03-17T20:43:17.246854+00:00 app[web.1]: Executing (5a8e0d48-b05b-4622-a4b0-82948eed01cb): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43780;
2021-03-17T20:43:17.260187+00:00 app[web.1]: Executing (5a8e0d48-b05b-4622-a4b0-82948eed01cb): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_31dfc0fad56941fcacdd9085d7fbac02$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43780,true,'2021-03-17 20:43:17.258 +00:00','2021-03-17 20:43:17.258 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_31dfc0fad56941fcacdd9085d7fbac02$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:17.265934+00:00 app[web.1]: Executing (5a8e0d48-b05b-4622-a4b0-82948eed01cb): COMMIT;
2021-03-17T20:43:17.272061+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.290940+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6b5P51m8xx2XA6U7sdNZ5E' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.297001+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:17.306169+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'The Weeknd' AND "Artist"."imageURL" = 'https://i.scdn.co/image/37376dba0623c33923eae9d234e5e199b76d227f' LIMIT 1;
2021-03-17T20:43:17.310198+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.312745+00:00 app[web.1]: Executing (a3ddb13e-9dcb-4503-b7e1-b48fbe1acee4): START TRANSACTION;
2021-03-17T20:43:17.314174+00:00 app[web.1]: Executing (a3ddb13e-9dcb-4503-b7e1-b48fbe1acee4): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43370;
2021-03-17T20:43:17.315387+00:00 app[web.1]: Executing (a3ddb13e-9dcb-4503-b7e1-b48fbe1acee4): COMMIT;
2021-03-17T20:43:17.316691+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43370;
2021-03-17T20:43:17.318892+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.335312+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '1E6DEDWDKHoOW0fcFuDghV' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.340425+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:17.344672+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:17.347210+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.353836+00:00 app[web.1]: Executing (4d0c397b-9e80-4363-9b94-26938897e65b): START TRANSACTION;
2021-03-17T20:43:17.358656+00:00 app[web.1]: Executing (4d0c397b-9e80-4363-9b94-26938897e65b): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:17.359994+00:00 app[web.1]: Executing (4d0c397b-9e80-4363-9b94-26938897e65b): COMMIT;
2021-03-17T20:43:17.361460+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:17.363851+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'SAFE' AND "Artist"."imageURL" = 'https://i.scdn.co/image/7a619d8565f847d6a0354a8f427a598be957989c' LIMIT 1;
2021-03-17T20:43:17.372284+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:17.376253+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58208 AND "SongArtists"."artistId" IN (43905);
2021-03-17T20:43:17.380953+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58208,43905,'2021-03-17 20:43:17.377 +00:00','2021-03-17 20:43:17.377 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.384610+00:00 app[web.1]: Executing (bbc16819-873f-4878-a58f-83ba574bba5c): START TRANSACTION;
2021-03-17T20:43:17.386081+00:00 app[web.1]: Executing (bbc16819-873f-4878-a58f-83ba574bba5c): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43905;
2021-03-17T20:43:17.394332+00:00 app[web.1]: Executing (bbc16819-873f-4878-a58f-83ba574bba5c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8e9eb9a02ae04ab9a25a8b5ed8ecf05c$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43905,true,'2021-03-17 20:43:17.392 +00:00','2021-03-17 20:43:17.392 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8e9eb9a02ae04ab9a25a8b5ed8ecf05c$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:17.398953+00:00 app[web.1]: Executing (bbc16819-873f-4878-a58f-83ba574bba5c): COMMIT;
2021-03-17T20:43:17.414735+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.419001+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '42w7pX3r1TpLR0i55Ek5ND' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.422926+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:17.426254+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:17.432726+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.443615+00:00 app[web.1]: Executing (4a270dd3-d1c7-4787-8281-488c81ed470c): START TRANSACTION;
2021-03-17T20:43:17.445270+00:00 app[web.1]: Executing (4a270dd3-d1c7-4787-8281-488c81ed470c): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:17.448142+00:00 app[web.1]: Executing (4a270dd3-d1c7-4787-8281-488c81ed470c): COMMIT;
2021-03-17T20:43:17.457036+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:17.482736+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.489054+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '4b4c0oH7PtrPsI86drzgFs' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.504496+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:17.514039+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'The Wanted' AND "Artist"."imageURL" = 'https://i.scdn.co/image/ac3995e49a3f4d6922990776235e4aabd4c751ce' LIMIT 1;
2021-03-17T20:43:17.520938+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:17.529822+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58210 AND "SongArtists"."artistId" IN (43906);
2021-03-17T20:43:17.531725+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58210,43906,'2021-03-17 20:43:17.530 +00:00','2021-03-17 20:43:17.530 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.536844+00:00 app[web.1]: Executing (30065d13-db27-412b-94bb-ad79e7f6f800): START TRANSACTION;
2021-03-17T20:43:17.538676+00:00 app[web.1]: Executing (30065d13-db27-412b-94bb-ad79e7f6f800): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43906;
2021-03-17T20:43:17.542779+00:00 app[web.1]: Executing (30065d13-db27-412b-94bb-ad79e7f6f800): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_8cb1b25805944f89bf740a9217cc8340$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43906,true,'2021-03-17 20:43:17.539 +00:00','2021-03-17 20:43:17.539 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_8cb1b25805944f89bf740a9217cc8340$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:17.545597+00:00 app[web.1]: Executing (30065d13-db27-412b-94bb-ad79e7f6f800): COMMIT;
2021-03-17T20:43:17.566717+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.576486+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '5OHUTC4EvTbL0DuZQRIGGX' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.580496+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:43:17.581144+00:00 app[web.1]: Executing (402b6537-9804-460e-91aa-97cbf930c5f6): START TRANSACTION;
2021-03-17T20:43:17.590804+00:00 app[web.1]: Executing (402b6537-9804-460e-91aa-97cbf930c5f6): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57605;
2021-03-17T20:43:17.593541+00:00 app[web.1]: Executing (402b6537-9804-460e-91aa-97cbf930c5f6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c0093fc583e54e4bab95db2c87384d62$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57605,37,'2021-03-17 20:43:17.591 +00:00','2021-03-17 20:43:17.591 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c0093fc583e54e4bab95db2c87384d62$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:17.601099+00:00 app[web.1]: Executing (402b6537-9804-460e-91aa-97cbf930c5f6): COMMIT;
2021-03-17T20:43:17.603330+00:00 app[web.1]: Executing (bec56e4a-1a9e-40e2-937b-d95980a6386c): START TRANSACTION;
2021-03-17T20:43:17.621074+00:00 app[web.1]: Executing (bec56e4a-1a9e-40e2-937b-d95980a6386c): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43397 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:17.623311+00:00 app[web.1]: Executing (bec56e4a-1a9e-40e2-937b-d95980a6386c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_2fb1a815baae41e0bd118ac3799f4aea$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43397,true,'2021-03-17 20:43:17.622 +00:00','2021-03-17 20:43:17.622 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_2fb1a815baae41e0bd118ac3799f4aea$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:17.638314+00:00 app[web.1]: Executing (bec56e4a-1a9e-40e2-937b-d95980a6386c): COMMIT;
2021-03-17T20:43:17.655939+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43397;
2021-03-17T20:43:17.663051+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '37sINbJZcFdHFAsVNsPq1i' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.666284+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:17.678854+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'The Script' AND "Artist"."imageURL" = 'https://i.scdn.co/image/b0d7782a07bb4305554837a88078a3b19a5c9eda' LIMIT 1;
2021-03-17T20:43:17.681307+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.703368+00:00 app[web.1]: Executing (8a9a75a3-c1e9-4967-84ba-8002f855577c): START TRANSACTION;
2021-03-17T20:43:17.707903+00:00 app[web.1]: Executing (8a9a75a3-c1e9-4967-84ba-8002f855577c): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43881;
2021-03-17T20:43:17.717292+00:00 app[web.1]: Executing (8a9a75a3-c1e9-4967-84ba-8002f855577c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_b2450d2548714039aeecf299a58d44e4$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43881,true,'2021-03-17 20:43:17.715 +00:00','2021-03-17 20:43:17.715 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_b2450d2548714039aeecf299a58d44e4$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:17.724616+00:00 app[web.1]: Executing (8a9a75a3-c1e9-4967-84ba-8002f855577c): COMMIT;
2021-03-17T20:43:17.735149+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.741522+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '7lPN2DXiMsVn7XUKtOW1CS' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.765035+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:17.776326+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Olivia Rodrigo' AND "Artist"."imageURL" = 'https://i.scdn.co/image/5fb1f691c5d3cdbc54e1934c1b76e0ce00bcee9b' LIMIT 1;
2021-03-17T20:43:17.787428+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:17.800905+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58212 AND "SongArtists"."artistId" IN (43907);
2021-03-17T20:43:17.805521+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58212,43907,'2021-03-17 20:43:17.804 +00:00','2021-03-17 20:43:17.804 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.816098+00:00 app[web.1]: Executing (c7e6acc1-c632-46a9-b6b8-3c834d112b9f): START TRANSACTION;
2021-03-17T20:43:17.821947+00:00 app[web.1]: Executing (c7e6acc1-c632-46a9-b6b8-3c834d112b9f): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43907;
2021-03-17T20:43:17.832663+00:00 app[web.1]: Executing (c7e6acc1-c632-46a9-b6b8-3c834d112b9f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_00c1556c6d9f4be196b0928cc887f486$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43907,true,'2021-03-17 20:43:17.831 +00:00','2021-03-17 20:43:17.831 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_00c1556c6d9f4be196b0928cc887f486$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:17.839424+00:00 app[web.1]: Executing (c7e6acc1-c632-46a9-b6b8-3c834d112b9f): COMMIT;
2021-03-17T20:43:17.847951+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.859579+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0HEckRWFSknIupbGzavk5d' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.872898+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:17.892512+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:17.901470+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:17.913502+00:00 app[web.1]: Executing (7a41a71e-1694-4743-90d3-4c4188d67b08): START TRANSACTION;
2021-03-17T20:43:17.922850+00:00 app[web.1]: Executing (7a41a71e-1694-4743-90d3-4c4188d67b08): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:17.927531+00:00 app[web.1]: Executing (7a41a71e-1694-4743-90d3-4c4188d67b08): COMMIT;
2021-03-17T20:43:17.932803+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:17.942053+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:17.984012+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '2cbic3TiUENlJX91y67ARR' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:17.992782+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:18.030011+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Bon Iver' AND "Artist"."imageURL" = 'https://i.scdn.co/image/d5ea2b221938b03e2096ef2c2caf2a0558014c1e' LIMIT 1;
2021-03-17T20:43:18.035794+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.040521+00:00 app[web.1]: Executing (c7758b2a-d8c4-4233-bc52-e5920c136e13): START TRANSACTION;
2021-03-17T20:43:18.043725+00:00 app[web.1]: Executing (c7758b2a-d8c4-4233-bc52-e5920c136e13): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43877;
2021-03-17T20:43:18.045643+00:00 app[web.1]: Executing (c7758b2a-d8c4-4233-bc52-e5920c136e13): COMMIT;
2021-03-17T20:43:18.049323+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43877;
2021-03-17T20:43:18.056444+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:18.064204+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '2p8IUWQDrpjuFltbdgLOag' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.072784+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:18.084457+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'The Weeknd' AND "Artist"."imageURL" = 'https://i.scdn.co/image/37376dba0623c33923eae9d234e5e199b76d227f' LIMIT 1;
2021-03-17T20:43:18.093124+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.097720+00:00 app[web.1]: Executing (dea14a40-4a8b-43e8-bff7-349d7f143c63): START TRANSACTION;
2021-03-17T20:43:18.099627+00:00 app[web.1]: Executing (dea14a40-4a8b-43e8-bff7-349d7f143c63): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43370;
2021-03-17T20:43:18.101943+00:00 app[web.1]: Executing (dea14a40-4a8b-43e8-bff7-349d7f143c63): COMMIT;
2021-03-17T20:43:18.104018+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43370;
2021-03-17T20:43:18.108990+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:18.122948+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '6TqXcAFInzjp0bODyvrWEq' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.125640+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:43:18.132742+00:00 app[web.1]: Executing (a4afcf26-f75d-46ea-9ab4-49bf5ce590cd): START TRANSACTION;
2021-03-17T20:43:18.134810+00:00 app[web.1]: Executing (a4afcf26-f75d-46ea-9ab4-49bf5ce590cd): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57929;
2021-03-17T20:43:18.137256+00:00 app[web.1]: Executing (a4afcf26-f75d-46ea-9ab4-49bf5ce590cd): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_0c97e6fe38f5478fb4dec4d60af9fd34$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57929,43,'2021-03-17 20:43:18.135 +00:00','2021-03-17 20:43:18.135 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_0c97e6fe38f5478fb4dec4d60af9fd34$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.141965+00:00 app[web.1]: Executing (a4afcf26-f75d-46ea-9ab4-49bf5ce590cd): COMMIT;
2021-03-17T20:43:18.146388+00:00 app[web.1]: Executing (025c4c57-bb13-4ceb-9b22-c4ffb6b8b860): START TRANSACTION;
2021-03-17T20:43:18.148252+00:00 app[web.1]: Executing (025c4c57-bb13-4ceb-9b22-c4ffb6b8b860): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43372 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:18.150819+00:00 app[web.1]: Executing (025c4c57-bb13-4ceb-9b22-c4ffb6b8b860): COMMIT;
2021-03-17T20:43:18.155185+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:18.162903+00:00 app[web.1]: Executing (959caaa9-6c09-4f22-a70d-2c5d61a5735d): START TRANSACTION;
2021-03-17T20:43:18.167756+00:00 app[web.1]: Executing (959caaa9-6c09-4f22-a70d-2c5d61a5735d): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43857 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:18.173326+00:00 app[web.1]: Executing (959caaa9-6c09-4f22-a70d-2c5d61a5735d): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c83de4fe6a854b2c9178c4a7b1fe82ec$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43857,true,'2021-03-17 20:43:18.171 +00:00','2021-03-17 20:43:18.171 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c83de4fe6a854b2c9178c4a7b1fe82ec$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.177100+00:00 app[web.1]: Executing (959caaa9-6c09-4f22-a70d-2c5d61a5735d): COMMIT;
2021-03-17T20:43:18.181996+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43857;
2021-03-17T20:43:18.185396+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '1ZMiCix7XSAbfAJlEZWMCp' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.189720+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:18.196612+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Harry Styles' AND "Artist"."imageURL" = 'https://i.scdn.co/image/b2163e7456f3d618a0e2a4e32bc892d6b11ce673' LIMIT 1;
2021-03-17T20:43:18.214420+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:18.217940+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58216 AND "SongArtists"."artistId" IN (43908);
2021-03-17T20:43:18.229190+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58216,43908,'2021-03-17 20:43:18.227 +00:00','2021-03-17 20:43:18.227 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.235750+00:00 app[web.1]: Executing (38db261a-e371-4fca-9faf-a70aa10e162f): START TRANSACTION;
2021-03-17T20:43:18.238150+00:00 app[web.1]: Executing (38db261a-e371-4fca-9faf-a70aa10e162f): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43908;
2021-03-17T20:43:18.241569+00:00 app[web.1]: Executing (38db261a-e371-4fca-9faf-a70aa10e162f): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_97e766506bb74eb0bc037b0ce1f81f5f$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43908,true,'2021-03-17 20:43:18.239 +00:00','2021-03-17 20:43:18.239 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_97e766506bb74eb0bc037b0ce1f81f5f$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.246189+00:00 app[web.1]: Executing (38db261a-e371-4fca-9faf-a70aa10e162f): COMMIT;
2021-03-17T20:43:18.250650+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:18.263754+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '3wNNbf63xkxw9rIVWtFy7a' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.272846+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:18.286443+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Cynthia Erivo' AND "Artist"."imageURL" = 'https://i.scdn.co/image/e1abb2e6e68497c55b6ac94ef11b4ea9e485baad' LIMIT 1;
2021-03-17T20:43:18.293400+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:18.300518+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58217 AND "SongArtists"."artistId" IN (43909);
2021-03-17T20:43:18.302634+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58217,43909,'2021-03-17 20:43:18.301 +00:00','2021-03-17 20:43:18.301 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.310304+00:00 app[web.1]: Executing (ca575f42-a016-4119-b9ce-7e07eafdf670): START TRANSACTION;
2021-03-17T20:43:18.315486+00:00 app[web.1]: Executing (ca575f42-a016-4119-b9ce-7e07eafdf670): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43909;
2021-03-17T20:43:18.318549+00:00 app[web.1]: Executing (ca575f42-a016-4119-b9ce-7e07eafdf670): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_c9ffe9a0f0044cbbb61f9f2dd399de67$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43909,true,'2021-03-17 20:43:18.316 +00:00','2021-03-17 20:43:18.316 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_c9ffe9a0f0044cbbb61f9f2dd399de67$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.332233+00:00 app[web.1]: Executing (ca575f42-a016-4119-b9ce-7e07eafdf670): COMMIT;
2021-03-17T20:43:18.340429+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:18.347847+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '5yY9lUy8nbvjM1Uyo1Uqoc' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.357630+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:18.363450+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Future' AND "Artist"."imageURL" = 'https://i.scdn.co/image/f29832dafb705339f45275679d1e9ba76cf6aec1' LIMIT 1;
2021-03-17T20:43:18.368481+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:18.371910+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58218 AND "SongArtists"."artistId" IN (43910);
2021-03-17T20:43:18.376041+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58218,43910,'2021-03-17 20:43:18.374 +00:00','2021-03-17 20:43:18.374 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.378596+00:00 app[web.1]: Executing (b437d03d-35d6-421f-a691-16f11b75dd9c): START TRANSACTION;
2021-03-17T20:43:18.384089+00:00 app[web.1]: Executing (b437d03d-35d6-421f-a691-16f11b75dd9c): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43910;
2021-03-17T20:43:18.386777+00:00 app[web.1]: Executing (b437d03d-35d6-421f-a691-16f11b75dd9c): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_439b60aab4ed409bac2c9894ff168f18$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43910,true,'2021-03-17 20:43:18.385 +00:00','2021-03-17 20:43:18.385 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_439b60aab4ed409bac2c9894ff168f18$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.396753+00:00 app[web.1]: Executing (b437d03d-35d6-421f-a691-16f11b75dd9c): COMMIT;
2021-03-17T20:43:18.401935+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Drake' AND "Artist"."imageURL" = 'https://i.scdn.co/image/60cfab40c6bb160a1906be45276829d430058005' LIMIT 1;
2021-03-17T20:43:18.404094+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.410717+00:00 app[web.1]: Executing (044cbcf0-3cf8-4259-a241-e06770160618): START TRANSACTION;
2021-03-17T20:43:18.413237+00:00 app[web.1]: Executing (044cbcf0-3cf8-4259-a241-e06770160618): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43380;
2021-03-17T20:43:18.420427+00:00 app[web.1]: Executing (044cbcf0-3cf8-4259-a241-e06770160618): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_baf4146af4c243d4911662f293d2cca5$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43380,true,'2021-03-17 20:43:18.419 +00:00','2021-03-17 20:43:18.419 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_baf4146af4c243d4911662f293d2cca5$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.424390+00:00 app[web.1]: Executing (044cbcf0-3cf8-4259-a241-e06770160618): COMMIT;
2021-03-17T20:43:18.449216+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:18.453592+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '09oZ9eXQ2fo6YDrPzJqAoP' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.473627+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:18.488518+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:18.495311+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.502784+00:00 app[web.1]: Executing (dff43d3d-f0bb-4f10-a88a-c8a7d998bec9): START TRANSACTION;
2021-03-17T20:43:18.507948+00:00 app[web.1]: Executing (dff43d3d-f0bb-4f10-a88a-c8a7d998bec9): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:18.513302+00:00 app[web.1]: Executing (dff43d3d-f0bb-4f10-a88a-c8a7d998bec9): COMMIT;
2021-03-17T20:43:18.515326+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:18.521359+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'John Mayer' AND "Artist"."imageURL" = 'https://i.scdn.co/image/093f63fe03e52d014286eb6e0afa9a099214cf65' LIMIT 1;
2021-03-17T20:43:18.528609+00:00 app[web.1]: Executing (default): INSERT INTO "Artists" ("id","name","genres","imageURL","temp","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6) RETURNING "id","name","genres","imageURL","temp","createdAt","updatedAt";
2021-03-17T20:43:18.552946+00:00 app[web.1]: Executing (default): SELECT "songId", "artistId", "createdAt", "updatedAt" FROM "SongArtists" AS "SongArtists" WHERE "SongArtists"."songId" = 58219 AND "SongArtists"."artistId" IN (43911);
2021-03-17T20:43:18.556616+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES (58219,43911,'2021-03-17 20:43:18.555 +00:00','2021-03-17 20:43:18.555 +00:00') RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.562540+00:00 app[web.1]: Executing (7e61d450-8f9e-4b26-806b-8e68988245d6): START TRANSACTION;
2021-03-17T20:43:18.564555+00:00 app[web.1]: Executing (7e61d450-8f9e-4b26-806b-8e68988245d6): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43911;
2021-03-17T20:43:18.572243+00:00 app[web.1]: Executing (7e61d450-8f9e-4b26-806b-8e68988245d6): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_04b9856a5ed24999a045f98cdf47fe37$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43911,true,'2021-03-17 20:43:18.565 +00:00','2021-03-17 20:43:18.565 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_04b9856a5ed24999a045f98cdf47fe37$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.577027+00:00 app[web.1]: Executing (7e61d450-8f9e-4b26-806b-8e68988245d6): COMMIT;
2021-03-17T20:43:18.579764+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:18.591183+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '0Hgqglypzt6Qs5Duqskcqs' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.600581+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:18.608196+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:18.612245+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.621708+00:00 app[web.1]: Executing (7e3826fb-c3fe-4f64-ad1a-6a255fb4a995): START TRANSACTION;
2021-03-17T20:43:18.624924+00:00 app[web.1]: Executing (7e3826fb-c3fe-4f64-ad1a-6a255fb4a995): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:18.629405+00:00 app[web.1]: Executing (7e3826fb-c3fe-4f64-ad1a-6a255fb4a995): COMMIT;
2021-03-17T20:43:18.631416+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:18.646212+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:18.659372+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '1EzrEOXmMH3G43AXT1y7pA' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.667803+00:00 app[web.1]: (sequelize) Warning: Unknown attributes (sessionID) passed to defaults option of findOrCreate
2021-03-17T20:43:18.668438+00:00 app[web.1]: Executing (5590fc26-3d8d-403d-baf5-50803d4e5d40): START TRANSACTION;
2021-03-17T20:43:18.673136+00:00 app[web.1]: Executing (5590fc26-3d8d-403d-baf5-50803d4e5d40): SELECT "songId", "rank", "createdAt", "updatedAt", "sessionId" FROM "UserSongs" AS "UserSongs" WHERE "UserSongs"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserSongs"."songId" = 57831;
2021-03-17T20:43:18.688459+00:00 app[web.1]: Executing (5590fc26-3d8d-403d-baf5-50803d4e5d40): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserSongs", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_99aa717c9a93486b8f785508101ca612$ BEGIN INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES (57831,49,'2021-03-17 20:43:18.685 +00:00','2021-03-17 20:43:18.685 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_99aa717c9a93486b8f785508101ca612$ LANGUAGE plpgsql; SELECT (testfunc.response)."songId", (testfunc.response)."rank", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.692918+00:00 app[web.1]: Executing (5590fc26-3d8d-403d-baf5-50803d4e5d40): COMMIT;
2021-03-17T20:43:18.697918+00:00 app[web.1]: Executing (dc662433-f44b-4c4c-a1aa-63355c781c09): START TRANSACTION;
2021-03-17T20:43:18.699549+00:00 app[web.1]: Executing (dc662433-f44b-4c4c-a1aa-63355c781c09): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."artistId" = 43776 AND "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo';
2021-03-17T20:43:18.701694+00:00 app[web.1]: Executing (dc662433-f44b-4c4c-a1aa-63355c781c09): CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response "UserArtists", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_83cd17f74d3142238a35cd4ee19e82e6$ BEGIN INSERT INTO "UserArtists" ("artistId","temp","createdAt","updatedAt","sessionId") VALUES (43776,true,'2021-03-17 20:43:18.700 +00:00','2021-03-17 20:43:18.700 +00:00','glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_83cd17f74d3142238a35cd4ee19e82e6$ LANGUAGE plpgsql; SELECT (testfunc.response)."artistId", (testfunc.response)."temp", (testfunc.response)."createdAt", (testfunc.response)."updatedAt", (testfunc.response)."sessionId", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();
2021-03-17T20:43:18.706192+00:00 app[web.1]: Executing (dc662433-f44b-4c4c-a1aa-63355c781c09): COMMIT;
2021-03-17T20:43:18.708732+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43776;
2021-03-17T20:43:18.717519+00:00 app[web.1]: Executing (default): SELECT "Songs".*, "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM (SELECT "Songs"."id" FROM "Songs" AS "Songs" WHERE "Songs"."spotifyId" = '1WqLtczgKdbHFHhefOU0y7' LIMIT 1) AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId";
2021-03-17T20:43:18.720924+00:00 app[web.1]: Executing (default): INSERT INTO "Songs" ("id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","spotifyId","temp","previewURL","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) RETURNING "id","name","imageURL","yearOfRelease","valence","danceability","energy","mode","key","speechiness","tempo","acousticness","popularity","instrumentalness","rank","decadeId","spotifyId","temp","previewURL","createdAt","updatedAt";
2021-03-17T20:43:18.726090+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Artists" AS "Artist" WHERE "Artist"."name" = 'Khalid' AND "Artist"."imageURL" = 'https://i.scdn.co/image/480468924609319ff2c0ed518082be473793552a' LIMIT 1;
2021-03-17T20:43:18.731822+00:00 app[web.1]: Executing (default): INSERT INTO "SongArtists" ("songId","artistId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) RETURNING "songId","artistId","createdAt","updatedAt";
2021-03-17T20:43:18.738511+00:00 app[web.1]: Executing (5dd2ea17-1099-475f-9558-1ce3c2726a71): START TRANSACTION;
2021-03-17T20:43:18.740136+00:00 app[web.1]: Executing (5dd2ea17-1099-475f-9558-1ce3c2726a71): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:18.743298+00:00 app[web.1]: Executing (5dd2ea17-1099-475f-9558-1ce3c2726a71): COMMIT;
2021-03-17T20:43:18.745086+00:00 app[web.1]: Executing (default): SELECT "artistId", "temp", "createdAt", "updatedAt", "sessionId" FROM "UserArtists" AS "UserArtists" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."artistId" = 43372;
2021-03-17T20:43:18.750138+00:00 app[web.1]: Executing (default): INSERT INTO "UserSongs" ("songId","rank","createdAt","updatedAt","sessionId") VALUES ($1,$2,$3,$4,$5) RETURNING "songId","rank","createdAt","updatedAt","sessionId";
2021-03-17T20:43:18.769040+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."valence', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."valence" DESC;
2021-03-17T20:43:18.832805+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."valence', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."valence" ASC;
2021-03-17T20:43:18.897581+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."valence") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:43:18.914253+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."danceability', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."danceability" DESC;
2021-03-17T20:43:19.072260+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."danceability', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."danceability" ASC;
2021-03-17T20:43:19.105054+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."danceability") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:43:19.109929+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."instrumentalness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."instrumentalness" DESC;
2021-03-17T20:43:19.142933+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."instrumentalness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."instrumentalness" ASC;
2021-03-17T20:43:19.170473+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."instrumentalness") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:43:19.174091+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."energy', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."energy" DESC;
2021-03-17T20:43:19.240387+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."energy', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."energy" ASC;
2021-03-17T20:43:19.271110+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."energy") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:43:19.275126+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."speechiness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."speechiness" DESC;
2021-03-17T20:43:19.303676+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."speechiness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."speechiness" ASC;
2021-03-17T20:43:19.340588+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."speechiness") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:43:19.352154+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."tempo', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."tempo" DESC;
2021-03-17T20:43:19.404920+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."tempo', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."tempo" ASC;
2021-03-17T20:43:19.435050+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."tempo") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:43:19.440301+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."acousticness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."acousticness" DESC;
2021-03-17T20:43:19.474065+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."acousticness', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."acousticness" ASC;
2021-03-17T20:43:19.496174+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."acousticness") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:43:19.501475+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."rank', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs->UserSongs"."rank" ASC;
2021-03-17T20:43:19.528883+00:00 app[web.1]: Executing (default): SELECT "tempUser"."id", "tempUser"."sessionId", 'Songs->UserSongs"."popularity', "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->UserSongs"."songId" AS "Songs.UserSongs.songId", "Songs->UserSongs"."rank" AS "Songs.UserSongs.rank", "Songs->UserSongs"."createdAt" AS "Songs.UserSongs.createdAt", "Songs->UserSongs"."updatedAt" AS "Songs.UserSongs.updatedAt", "Songs->UserSongs"."sessionId" AS "Songs.UserSongs.sessionId", "Songs->Artists"."id" AS "Songs.Artists.id", "Songs->Artists"."name" AS "Songs.Artists.name", "Songs->Artists"."genres" AS "Songs.Artists.genres", "Songs->Artists"."imageURL" AS "Songs.Artists.imageURL", "Songs->Artists"."temp" AS "Songs.Artists.temp", "Songs->Artists"."createdAt" AS "Songs.Artists.createdAt", "Songs->Artists"."updatedAt" AS "Songs.Artists.updatedAt", "Songs->Artists->SongArtists"."songId" AS "Songs.Artists.SongArtists.songId", "Songs->Artists->SongArtists"."artistId" AS "Songs.Artists.SongArtists.artistId", "Songs->Artists->SongArtists"."createdAt" AS "Songs.Artists.SongArtists.createdAt", "Songs->Artists->SongArtists"."updatedAt" AS "Songs.Artists.SongArtists.updatedAt" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->Artists->SongArtists" INNER JOIN "Artists" AS "Songs->Artists" ON "Songs->Artists"."id" = "Songs->Artists->SongArtists"."artistId") ON "Songs"."id" = "Songs->Artists->SongArtists"."songId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ORDER BY "Songs"."popularity" DESC;
2021-03-17T20:43:19.557552+00:00 app[web.1]: Executing (default): SELECT "tempUser"."sessionId", AVG("Songs"."popularity") AS "average" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "tempUser"."id";
2021-03-17T20:43:19.561839+00:00 app[web.1]: Executing (default): SELECT "Songs"."mode", Count("Songs"."mode") AS "count" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "Songs"."mode";
2021-03-17T20:43:19.565612+00:00 app[web.1]: Executing (default): SELECT "Songs"."key", Count("Songs"."key") AS "count" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "Songs"."key";
2021-03-17T20:43:19.567566+00:00 app[web.1]: Executing (default): select
2021-03-17T20:43:19.567567+00:00 app[web.1]: genre,
2021-03-17T20:43:19.567568+00:00 app[web.1]: count(x.genre)
2021-03-17T20:43:19.567568+00:00 app[web.1]: From
2021-03-17T20:43:19.567569+00:00 app[web.1]: (
2021-03-17T20:43:19.567569+00:00 app[web.1]: SELECT
2021-03-17T20:43:19.567570+00:00 app[web.1]: unnest(genres) as genre
2021-03-17T20:43:19.567570+00:00 app[web.1]: from
2021-03-17T20:43:19.567571+00:00 app[web.1]: "Artists"
2021-03-17T20:43:19.567571+00:00 app[web.1]: inner join
2021-03-17T20:43:19.567572+00:00 app[web.1]: "UserArtists"
2021-03-17T20:43:19.567573+00:00 app[web.1]: on "UserArtists"."artistId" = "Artists"."id"
2021-03-17T20:43:19.567573+00:00 app[web.1]: where
2021-03-17T20:43:19.567573+00:00 app[web.1]: "sessionId" ='glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND
2021-03-17T20:43:19.567574+00:00 app[web.1]: "UserArtists"."temp" =true
2021-03-17T20:43:19.567574+00:00 app[web.1]: )
2021-03-17T20:43:19.567575+00:00 app[web.1]: as x
2021-03-17T20:43:19.567575+00:00 app[web.1]: group by
2021-03-17T20:43:19.567575+00:00 app[web.1]: x.genre
2021-03-17T20:43:19.567576+00:00 app[web.1]: order by
2021-03-17T20:43:19.567576+00:00 app[web.1]: count desc limit 10
2021-03-17T20:43:19.577364+00:00 app[web.1]: Executing (default): SELECT "UserArtists"."artistId", "UserArtists"."temp", "UserArtists"."createdAt", "UserArtists"."updatedAt", "UserArtists"."sessionId", "Artist"."id" AS "Artist.id", "Artist"."name" AS "Artist.name", "Artist"."imageURL" AS "Artist.imageURL", "Artist"."genres" AS "Artist.genres", "Artist->Songs"."id" AS "Artist.Songs.id", "Artist->Songs"."name" AS "Artist.Songs.name", "Artist->Songs->SongArtists"."songId" AS "Artist.Songs.SongArtists.songId", "Artist->Songs->SongArtists"."artistId" AS "Artist.Songs.SongArtists.artistId", "Artist->Songs->SongArtists"."createdAt" AS "Artist.Songs.SongArtists.createdAt", "Artist->Songs->SongArtists"."updatedAt" AS "Artist.Songs.SongArtists.updatedAt", "Artist->Songs->tempUsers"."id" AS "Artist.Songs.tempUsers.id", "Artist->Songs->tempUsers"."sessionId" AS "Artist.Songs.tempUsers.sessionId", "Artist->Songs->tempUsers"."createdAt" AS "Artist.Songs.tempUsers.createdAt", "Artist->Songs->tempUsers"."updatedAt" AS "Artist.Songs.tempUsers.updatedAt" FROM "UserArtists" AS "UserArtists" LEFT OUTER JOIN "Artists" AS "Artist" ON "UserArtists"."artistId" = "Artist"."id" LEFT OUTER JOIN ( ( "SongArtists" AS "Artist->Songs->SongArtists" INNER JOIN "Songs" AS "Artist->Songs" ON "Artist->Songs"."id" = "Artist->Songs->SongArtists"."songId") INNER JOIN ( "UserSongs" AS "Artist->Songs->tempUsers->UserSongs" INNER JOIN "tempUsers" AS "Artist->Songs->tempUsers" ON "Artist->Songs->tempUsers"."sessionId" = "Artist->Songs->tempUsers->UserSongs"."sessionId") ON "Artist->Songs"."id" = "Artist->Songs->tempUsers->UserSongs"."songId" AND "Artist->Songs->tempUsers"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' ) ON "Artist"."id" = "Artist->Songs->SongArtists"."artistId" WHERE "UserArtists"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' AND "UserArtists"."temp" = true;
2021-03-17T20:43:19.647202+00:00 app[web.1]: Executing (default): SELECT "Songs"."yearOfRelease", Count("Songs"."yearOfRelease") AS "count" FROM "tempUsers" AS "tempUser" LEFT OUTER JOIN ( "UserSongs" AS "Songs->UserSongs" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->UserSongs"."songId") ON "tempUser"."sessionId" = "Songs->UserSongs"."sessionId" WHERE "tempUser"."sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo' GROUP BY "Songs"."yearOfRelease";
2021-03-17T20:43:19.952372+00:00 app[web.1]: Executing (default): SELECT "Songs"."name", "Songs"."id", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserSongs"."songId" AS "tempUsers.UserSongs.songId", "tempUsers->UserSongs"."rank" AS "tempUsers.UserSongs.rank", "tempUsers->UserSongs"."createdAt" AS "tempUsers.UserSongs.createdAt", "tempUsers->UserSongs"."updatedAt" AS "tempUsers.UserSongs.updatedAt", "tempUsers->UserSongs"."sessionId" AS "tempUsers.UserSongs.sessionId", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "UserSongs" AS "tempUsers->UserSongs" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserSongs"."sessionId") ON "Songs"."id" = "tempUsers->UserSongs"."songId" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE "Songs"."temp" = true;
2021-03-17T20:43:19.959437+00:00 heroku[router]: at=info method=GET path="/userData?timeLength=1Month&code=AQAYrvA4SpLWBax4d3DR8IWADa3LwNfA9hYCjbC11w-JYulDqT6ZYG1ndsri3RhNxlHbSSAQtC4WjrxSONP8YmfRDW-_BKsAOAiG2UJuwR84AJdFzfdCsdHSWovSVr7GYE2xtUo2H5_HQUlpwCsWXsO4EboMUVuNHXKscgk83TVlSpTV64M2zvZZYTv2d3Zrm2b1vtWZfwk1Jes_ROQDD3CEnA-epFHMZiUmg-0-DV_X5d_xzcQQ3j4zroJ-rA" host=musicthroughdecades.herokuapp.com request_id=c64a634d-54fe-4d60-b542-c147e1010627 fwd="174.89.36.96" dyno=web.1 connect=1ms service=8998ms status=200 bytes=27190 protocol=https
2021-03-17T20:43:19.992990+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43364;
2021-03-17T20:43:20.001167+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58179
2021-03-17T20:43:20.008955+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43895;
2021-03-17T20:43:20.047802+00:00 app[web.1]: Executing (default): SELECT "id" FROM "Decades" AS "Decade" WHERE "Decade"."name" = '1980' LIMIT 1;
2021-03-17T20:43:20.049755+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58180
2021-03-17T20:43:20.055438+00:00 app[web.1]: Executing (default): SELECT "Songs"."id", "Songs"."name", "Songs"."imageURL", "Songs"."spotifyId", "Artists"."id" AS "Artists.id", "Artists"."name" AS "Artists.name", "Artists"."genres" AS "Artists.genres", "Artists"."imageURL" AS "Artists.imageURL", "Artists"."temp" AS "Artists.temp", "Artists"."createdAt" AS "Artists.createdAt", "Artists"."updatedAt" AS "Artists.updatedAt", "Artists->SongArtists"."songId" AS "Artists.SongArtists.songId", "Artists->SongArtists"."artistId" AS "Artists.SongArtists.artistId", "Artists->SongArtists"."createdAt" AS "Artists.SongArtists.createdAt", "Artists->SongArtists"."updatedAt" AS "Artists.SongArtists.updatedAt" FROM "Songs" AS "Songs" LEFT OUTER JOIN ( "SongArtists" AS "Artists->SongArtists" INNER JOIN "Artists" AS "Artists" ON "Artists"."id" = "Artists->SongArtists"."artistId") ON "Songs"."id" = "Artists->SongArtists"."songId" WHERE ("Songs"."valence" BETWEEN '0.1515060003846884' AND '0.5915060003846884' AND "Songs"."energy" BETWEEN '0.2840400010347367' AND '0.7240400010347366' AND "Songs"."danceability" BETWEEN '0.369139997959137' AND '0.8091399979591369' AND "Songs"."tempo" BETWEEN '74.43239974975586' AND '142.43239974975586') AND "Songs"."decadeId" = 4;
2021-03-17T20:43:20.063108+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.067128+00:00 heroku[router]: at=info method=GET path="/userReccomendations?decade=1980&averageValues={%22valence%22:0.3715060003846884,%22danceability%22:0.589139997959137,%22instrumentalness%22:0.06433477056134962,%22energy%22:0.5040400010347367,%22speechiness%22:0.07907000038772821,%22tempo%22:108.43239974975586,%22acousticness%22:0.3923811998963356}" host=musicthroughdecades.herokuapp.com request_id=83e67d90-c7cc-4e97-a7d2-cc085f4eb176 fwd="174.89.36.96" dyno=web.1 connect=2ms service=60ms status=200 bytes=3455 protocol=https
2021-03-17T20:43:20.073872+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58181
2021-03-17T20:43:20.079130+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43502;
2021-03-17T20:43:20.090090+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58182
2021-03-17T20:43:20.139849+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:43:20.169975+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43877;
2021-03-17T20:43:20.173915+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58183
2021-03-17T20:43:20.178652+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43897;
2021-03-17T20:43:20.181636+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58184
2021-03-17T20:43:20.185720+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43395;
2021-03-17T20:43:20.216690+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58185
2021-03-17T20:43:20.239077+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.280799+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58186
2021-03-17T20:43:20.292920+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:43:20.302445+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58187
2021-03-17T20:43:20.309278+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43376;
2021-03-17T20:43:20.315033+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58188
2021-03-17T20:43:20.321463+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43896;
2021-03-17T20:43:20.324381+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58189
2021-03-17T20:43:20.329607+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.340233+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58190
2021-03-17T20:43:20.347116+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.355217+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58191
2021-03-17T20:43:20.360249+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43370;
2021-03-17T20:43:20.369300+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58192
2021-03-17T20:43:20.378052+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:43:20.394076+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58193
2021-03-17T20:43:20.411832+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:43:20.420247+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58194
2021-03-17T20:43:20.429271+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.437278+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58195
2021-03-17T20:43:20.446641+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.452979+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58196
2021-03-17T20:43:20.457386+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43321;
2021-03-17T20:43:20.462277+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58197
2021-03-17T20:43:20.473657+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43410;
2021-03-17T20:43:20.479026+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58198
2021-03-17T20:43:20.494492+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43387;
2021-03-17T20:43:20.499067+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58199
2021-03-17T20:43:20.505786+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43880;
2021-03-17T20:43:20.512907+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58200
2021-03-17T20:43:20.520047+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.526212+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58201
2021-03-17T20:43:20.558107+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.571078+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58202
2021-03-17T20:43:20.575658+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43487;
2021-03-17T20:43:20.579920+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58203
2021-03-17T20:43:20.586905+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43898;
2021-03-17T20:43:20.591967+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43899;
2021-03-17T20:43:20.605195+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43900;
2021-03-17T20:43:20.613396+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43901;
2021-03-17T20:43:20.618189+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43902;
2021-03-17T20:43:20.693508+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43903;
2021-03-17T20:43:20.737767+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43904;
2021-03-17T20:43:20.743265+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58204
2021-03-17T20:43:20.754173+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.768009+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58205
2021-03-17T20:43:20.781455+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43804;
2021-03-17T20:43:20.792627+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43780;
2021-03-17T20:43:20.816685+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58206
2021-03-17T20:43:20.838412+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43370;
2021-03-17T20:43:20.849355+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58207
2021-03-17T20:43:20.860392+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.904310+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43905;
2021-03-17T20:43:20.921103+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58208
2021-03-17T20:43:20.929096+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:20.941613+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58209
2021-03-17T20:43:20.953279+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43906;
2021-03-17T20:43:20.960619+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58210
2021-03-17T20:43:20.966740+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43881;
2021-03-17T20:43:20.976673+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58211
2021-03-17T20:43:20.987815+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43907;
2021-03-17T20:43:20.996580+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58212
2021-03-17T20:43:21.001172+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:21.008831+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58213
2021-03-17T20:43:21.013633+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43877;
2021-03-17T20:43:21.021257+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58214
2021-03-17T20:43:21.026126+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43370;
2021-03-17T20:43:21.029502+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58215
2021-03-17T20:43:21.034307+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43908;
2021-03-17T20:43:21.062255+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58216
2021-03-17T20:43:21.067014+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43909;
2021-03-17T20:43:21.070171+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58217
2021-03-17T20:43:21.114124+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43910;
2021-03-17T20:43:21.121574+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43380;
2021-03-17T20:43:21.129757+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58218
2021-03-17T20:43:21.134219+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:21.142323+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43911;
2021-03-17T20:43:21.163356+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58219
2021-03-17T20:43:21.168530+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:21.172739+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58220
2021-03-17T20:43:21.177105+00:00 app[web.1]: Executing (default): SELECT "Artist"."id", "Artist"."name", "Artist"."genres", "Artist"."imageURL", "Artist"."temp", "Artist"."createdAt", "Artist"."updatedAt", "tempUsers"."id" AS "tempUsers.id", "tempUsers"."sessionId" AS "tempUsers.sessionId", "tempUsers"."createdAt" AS "tempUsers.createdAt", "tempUsers"."updatedAt" AS "tempUsers.updatedAt", "tempUsers->UserArtists"."artistId" AS "tempUsers.UserArtists.artistId", "tempUsers->UserArtists"."temp" AS "tempUsers.UserArtists.temp", "tempUsers->UserArtists"."createdAt" AS "tempUsers.UserArtists.createdAt", "tempUsers->UserArtists"."updatedAt" AS "tempUsers.UserArtists.updatedAt", "tempUsers->UserArtists"."sessionId" AS "tempUsers.UserArtists.sessionId", "Songs"."id" AS "Songs.id", "Songs"."name" AS "Songs.name", "Songs"."imageURL" AS "Songs.imageURL", "Songs"."yearOfRelease" AS "Songs.yearOfRelease", "Songs"."valence" AS "Songs.valence", "Songs"."danceability" AS "Songs.danceability", "Songs"."energy" AS "Songs.energy", "Songs"."mode" AS "Songs.mode", "Songs"."key" AS "Songs.key", "Songs"."speechiness" AS "Songs.speechiness", "Songs"."tempo" AS "Songs.tempo", "Songs"."acousticness" AS "Songs.acousticness", "Songs"."popularity" AS "Songs.popularity", "Songs"."instrumentalness" AS "Songs.instrumentalness", "Songs"."rank" AS "Songs.rank", "Songs"."decadeId" AS "Songs.decadeId", "Songs"."spotifyId" AS "Songs.spotifyId", "Songs"."temp" AS "Songs.temp", "Songs"."previewURL" AS "Songs.previewURL", "Songs"."createdAt" AS "Songs.createdAt", "Songs"."updatedAt" AS "Songs.updatedAt", "Songs->SongArtists"."songId" AS "Songs.SongArtists.songId", "Songs->SongArtists"."artistId" AS "Songs.SongArtists.artistId", "Songs->SongArtists"."createdAt" AS "Songs.SongArtists.createdAt", "Songs->SongArtists"."updatedAt" AS "Songs.SongArtists.updatedAt" FROM "Artists" AS "Artist" LEFT OUTER JOIN ( "UserArtists" AS "tempUsers->UserArtists" INNER JOIN "tempUsers" AS "tempUsers" ON "tempUsers"."sessionId" = "tempUsers->UserArtists"."sessionId") ON "Artist"."id" = "tempUsers->UserArtists"."artistId" LEFT OUTER JOIN ( "SongArtists" AS "Songs->SongArtists" INNER JOIN "Songs" AS "Songs" ON "Songs"."id" = "Songs->SongArtists"."songId") ON "Artist"."id" = "Songs->SongArtists"."artistId" WHERE "Artist"."id" = 43372;
2021-03-17T20:43:21.181213+00:00 app[web.1]: Executing (default): DELETE FROM "Songs" WHERE "id" = 58221
2021-03-17T20:43:21.183705+00:00 app[web.1]: Executing (default): DELETE FROM "tempUsers" WHERE "sessionId" = 'glcqDNkYUN6GmPFNfhptvq4UnoNq2NCo'
2021-03-17T20:43:44.424522+00:00 heroku[router]: at=info method=GET path="/favicon.ico" host=musicthroughdecades.herokuapp.com request_id=d2343485-e59c-4a6e-b4b2-a7aa96d4bac5 fwd="174.89.36.96" dyno=web.1 connect=1ms service=33ms status=304 bytes=237 protocol=https
2021-03-17T20:48:21.363150+00:00 heroku[router]: at=info method=GET path="/" host=musicthroughdecades.herokuapp.com request_id=10baeb91-af36-4f1c-a791-094ad43fa1a1 fwd="174.89.36.96" dyno=web.1 connect=0ms service=40ms status=304 bytes=237 protocol=https
2021-03-17T20:48:21.580785+00:00 heroku[router]: at=info method=GET path="/static/css/main.be8902c4.chunk.css" host=musicthroughdecades.herokuapp.com request_id=a2c951eb-c03f-4c59-bf51-cfa6a9cff4ce fwd="174.89.36.96" dyno=web.1 connect=0ms service=8ms status=304 bytes=238 protocol=https
2021-03-17T20:48:21.581321+00:00 heroku[router]: at=info method=GET path="/static/css/2.d470c34f.chunk.css" host=musicthroughdecades.herokuapp.com request_id=4226c677-579d-4bce-8f03-1ed667fa5c6a fwd="174.89.36.96" dyno=web.1 connect=0ms service=8ms status=304 bytes=239 protocol=https
2021-03-17T20:48:21.616725+00:00 heroku[router]: at=info method=GET path="/static/js/2.5d3ceb0f.chunk.js" host=musicthroughdecades.herokuapp.com request_id=87369cbd-4033-46d4-8459-d43c5d680dc7 fwd="174.89.36.96" dyno=web.1 connect=0ms service=9ms status=304 bytes=239 protocol=https
2021-03-17T20:48:21.620223+00:00 heroku[router]: at=info method=GET path="/static/js/main.9e08271a.chunk.js" host=musicthroughdecades.herokuapp.com request_id=5ca20b59-b87b-463b-b2d8-9474ac4d44ef fwd="174.89.36.96" dyno=web.1 connect=0ms service=11ms status=304 bytes=239 protocol=https
2021-03-17T20:48:22.114324+00:00 heroku[router]: at=info method=GET path="/manifest.json" host=musicthroughdecades.herokuapp.com request_id=f992068e-ed63-41df-81c5-160a70fa8337 fwd="174.89.36.96" dyno=web.1 connect=1ms service=4ms status=304 bytes=363 protocol=https
2021-03-17T20:48:22.153890+00:00 heroku[router]: at=info method=GET path="/logo192.png" host=musicthroughdecades.herokuapp.com request_id=bb533d7b-33fe-4ab5-85b1-49396c5f637f fwd="174.89.36.96" dyno=web.1 connect=0ms service=6ms status=304 bytes=238 protocol=https
2021-03-17T20:49:52.612407+00:00 heroku[router]: at=info method=GET path="/" host=musicthroughdecades.herokuapp.com request_id=896c154b-5cd2-4c52-8e73-c8db87943502 fwd="174.89.36.96" dyno=web.1 connect=1ms service=3ms status=304 bytes=237 protocol=https
2021-03-17T20:49:52.811380+00:00 heroku[router]: at=info method=GET path="/static/css/2.d470c34f.chunk.css" host=musicthroughdecades.herokuapp.com request_id=ed6cdc8f-1310-4089-b792-2ac61b1f7199 fwd="174.89.36.96" dyno=web.1 connect=1ms service=8ms status=304 bytes=239 protocol=https
2021-03-17T20:49:52.850086+00:00 heroku[router]: at=info method=GET path="/static/css/main.be8902c4.chunk.css" host=musicthroughdecades.herokuapp.com request_id=1705acd8-67f5-4235-8af0-35cdf69f2ff8 fwd="174.89.36.96" dyno=web.1 connect=1ms service=31ms status=304 bytes=238 protocol=https
2021-03-17T20:49:52.889544+00:00 heroku[router]: at=info method=GET path="/static/js/2.5d3ceb0f.chunk.js" host=musicthroughdecades.herokuapp.com request_id=9313194b-5b2c-4bd9-bb92-7f44884598da fwd="174.89.36.96" dyno=web.1 connect=1ms service=54ms status=304 bytes=239 protocol=https
2021-03-17T20:49:52.897155+00:00 heroku[router]: at=info method=GET path="/static/js/main.9e08271a.chunk.js" host=musicthroughdecades.herokuapp.com request_id=0d78830e-b691-44b4-baa3-a35d982bd4b0 fwd="174.89.36.96" dyno=web.1 connect=0ms service=29ms status=304 bytes=239 protocol=https
2021-03-17T20:49:53.433584+00:00 heroku[router]: at=info method=GET path="/manifest.json" host=musicthroughdecades.herokuapp.com request_id=55c9b050-af60-40ac-a838-8789214185ad fwd="174.89.36.96" dyno=web.1 connect=0ms service=3ms status=304 bytes=365 protocol=https
2021-03-17T20:49:53.472070+00:00 heroku[router]: at=info method=GET path="/logo192.png" host=musicthroughdecades.herokuapp.com request_id=580e9714-9581-4495-9fae-a01a0189bc68 fwd="174.89.36.96" dyno=web.1 connect=0ms service=3ms status=304 bytes=238 protocol=https
2021-03-17T21:23:57.095526+00:00 heroku[web.1]: Idling
2021-03-17T21:23:57.099680+00:00 heroku[web.1]: State changed from up to down
2021-03-17T21:23:59.958830+00:00 heroku[web.1]: Stopping all processes with SIGTERM
2021-03-17T21:24:00.130140+00:00 heroku[web.1]: Process exited with status 143
2021-03-17T21:35:38.395796+00:00 heroku[web.1]: Unidling
2021-03-17T21:35:38.399470+00:00 heroku[web.1]: State changed from down to starting
2021-03-17T21:36:06.118019+00:00 heroku[web.1]: Starting process with command `npm start`
2021-03-17T21:36:10.855572+00:00 app[web.1]: 
2021-03-17T21:36:10.855597+00:00 app[web.1]: > server@1.0.0 start /app
2021-03-17T21:36:10.855597+00:00 app[web.1]: > node app.js
2021-03-17T21:36:10.855598+00:00 app[web.1]: 
2021-03-17T21:36:12.616599+00:00 app[web.1]: Warning: connect.session() MemoryStore is not
2021-03-17T21:36:12.616623+00:00 app[web.1]: designed for a production environment, as it will leak
2021-03-17T21:36:12.616624+00:00 app[web.1]: memory, and will not scale past a single process.
2021-03-17T21:36:12.632979+00:00 app[web.1]: app listening on port 4218
2021-03-17T21:36:13.157066+00:00 heroku[web.1]: State changed from starting to up
2021-03-17T21:36:14.863916+00:00 heroku[router]: at=info method=GET path="/" host=musicthroughdecades.herokuapp.com request_id=9082a5a5-edba-43d3-9259-73fa4105fddf fwd="174.89.36.96" dyno=web.1 connect=6ms service=78ms status=304 bytes=367 protocol=https
2021-03-17T21:36:15.277301+00:00 heroku[router]: at=info method=GET path="/static/css/2.d470c34f.chunk.css" host=musicthroughdecades.herokuapp.com request_id=55ebeb6f-132a-4a08-85f5-0ddb66e87e00 fwd="174.89.36.96" dyno=web.1 connect=0ms service=10ms status=304 bytes=239 protocol=https
2021-03-17T21:36:15.309004+00:00 heroku[router]: at=info method=GET path="/static/js/2.5d3ceb0f.chunk.js" host=musicthroughdecades.herokuapp.com request_id=0e726286-3bf2-4f66-9646-d87ab18d06b6 fwd="174.89.36.96" dyno=web.1 connect=1ms service=37ms status=200 bytes=628212 protocol=https
2021-03-17T21:36:15.779139+00:00 heroku[router]: at=info method=GET path="/static/css/main.be8902c4.chunk.css" host=musicthroughdecades.herokuapp.com request_id=3e81b0e4-0894-4e26-86bc-2fee92cf30b7 fwd="174.89.36.96" dyno=web.1 connect=1ms service=3ms status=304 bytes=238 protocol=https
2021-03-17T21:36:16.770273+00:00 heroku[router]: at=info method=GET path="/static/js/main.9e08271a.chunk.js" host=musicthroughdecades.herokuapp.com request_id=b5b6f264-b9c5-46b5-bb30-8a8a4080eafd fwd="174.89.36.96" dyno=web.1 connect=1ms service=3ms status=304 bytes=239 protocol=https
2021-03-17T21:36:17.898969+00:00 heroku[router]: at=info method=GET path="/manifest.json" host=musicthroughdecades.herokuapp.com request_id=f1a63e28-a1fd-473b-b4c7-295139d47e57 fwd="174.89.36.96" dyno=web.1 connect=1ms service=8ms status=304 bytes=361 protocol=https
2021-03-17T21:36:19.389995+00:00 heroku[router]: at=info method=GET path="/logo192.png" host=musicthroughdecades.herokuapp.com request_id=a88a713c-85be-440c-ac34-5733b700cd3d fwd="174.89.36.96" dyno=web.1 connect=34ms service=23ms status=304 bytes=238 protocol=https
